<style lang="less">
@import "../styles/variable";

.productGroup{
  .productList{
    .types{
      display: flex;
      padding: 20rpx 30rpx;
      background: #fff;
      .btn{
        width: 70px;
        height: 30px;
        background: #f2f2f2;
        border-color: #f2f2f2;
        border-radius: 60rpx;
        text-align: center;
        line-height: 30px;
        font-size: 13px;
        &.active{
          background: @primary-color;
          border-color: @primary-color;
          color: #fff;
        }
      }
    }
    .productListBox{
    }
    .item{
      position: relative;
      display: flex;
      margin-top: 20rpx;
      margin-right: 20rpx;
      margin-left: 20rpx;
      .checkStatus{
        margin: 100rpx 20rpx 0 20rpx;
        color: @primary-color;
        .iconfont{
          font-size: 40rpx;
        }
      }
      .detailCon{
        flex: 1;
        display: flex;
        background: #fff;
        .pic{
          position: relative;
          width: 250rpx;
          height: 250rpx;
          .tag{
            position: absolute;
            left: 0;
            top: 0;
            height: 40rpx;
            line-height: 40rpx;
            font-size: 24rpx;
            background: red;
            color: #fff;
            padding: 0 10rpx;
          }
          image{
            width: 250rpx;
            height: 250rpx;
          }
        }
        .info{
          flex: 1;
          margin: 10rpx 20rpx 0;
          .tit{
            height: 76rpx;
            overflow: hidden;
            font-size: 28rpx;
          }

          .des{
            margin-top: 20rpx;
            .leftBox{
              float: left;
              .list{
                line-height: 44rpx;
                color: #999;
                font-size: 24rpx;
              }
            }
            .rightBox{
              position: absolute;
              right: 20rpx;
              bottom: 20rpx;
              text-align: right;
              .price{
                color: @primary-green;
                text{
                  font-size: 40rpx;
                }
              }
              .btnOpt{
                .btn{
                  float: left;
                  width: 120rpx;
                  height: 50rpx;
                  margin-top: 16rpx;
                  margin-left: 20rpx;
                  border: 1px solid @primary-color;
                  border-radius: 50rpx;
                  line-height: 50rpx;
                  text-align: center;
                  color: @primary-color;
                }
              }
            }

          }
        }
      }
    }
  }

  .itemBoxTit{
    position: relative;
    margin: 10rpx 20rpx 0;
    line-height: 80rpx;
    border-bottom: 1px solid @border-color-grey;
    font-size: 32rpx;
    .moreLink{
      position: absolute;
      right: 0;
      top: 0;
      line-height: 80rpx;
      font-size: 24rpx;
    }
  }
  .itemBoxCon{
    padding: 20rpx;
    
  }

  .groupPerson{
    margin: 20rpx;
    background: #fff;
    
    .item{
      display: inline-block;
      vertical-align: middle;
      width: 60rpx;
      height: 60rpx;
      margin: 10rpx 20rpx;
      image{
        display: block;
        width: 60rpx;
        height: 60rpx;
        border-radius: 100%;
      }
      .avatarPlaceholder{
        display: block;
        width: 60rpx;
        height: 60rpx;
        border-radius: 60rpx;
        background: #f1f1f1;
        border: 1px solid #ccc;
        line-height: 60rpx;
        text-align: center;
      }
    }
  }

  .detailInfo{
    margin: 0 20rpx;
    padding: 0 0 100rpx;
    background: #fff;
    .tit{
      font-size: 32rpx;
    }
    .fieldCon:last-child{
      border-bottom: 0;
    }

    .fieldCon {
      display: flex;
      margin: 0 30rpx;
      padding: 18rpx 0;
      border-bottom: 1px solid @border-color-grey;
      font-size: 28rpx;
      &.des {
        padding-top: 30rpx;
        border-bottom: 0;
        .label{
          line-height: 1;
        }
      }
      .label {
        width: 130rpx;
        padding-right: 20rpx;
        line-height: 50rpx;
      }
      .con {
        flex: 1;
        input{
          height: 50rpx;
          min-height: 50rpx;
          line-height: 50rpx;
        }
        .fieldDes {
          margin-top: -15rpx;
          min-height: 200rpx;
        }
        .groupList{
          display: flex;
          justify-content: space-between;
          margin-bottom: 16rpx;
          .item{
            display: flex;
            align-items:center;
            border-bottom: 1px solid #ddd;
            input{
              width: 80rpx;
            }
          }
        }
        &.fieldPriceCon{
          display: flex;
          justify-content: space-between;
          input{
            width: 90px;
          }
          .label{
            width: 120rpx;
          }
        }
        .fee{
          line-height: 50rpx;
          color: @primary-color;
        }
      }
      .pics {
        display: flex;
        flex-wrap: wrap;
        .picItem {
          position: relative;
          width: 120rpx;
          height: 120rpx;
          margin: 0 30rpx 20rpx 0;
          border: 1px solid @border-color-grey;
          text-align: center;
          .tag{
            position: absolute;
            left: 0;
            top: 0;
            height: 36rpx;
            line-height: 36rpx;
            font-size: 24rpx;
            background: red;
            color: #fff;
            padding: 0 8rpx;
          }

          // &.cover{
          //   border: 1px solid @primary-green;
          // }

          image {
            width: 120rpx;
            height: 120rpx;
          }
          .setBtn {
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 30rpx;
            background: rgba(0, 0, 0, 0.3);
            line-height: 30rpx;
            text-align: center;
            color: #fff;
            font-size: 20rpx;
          }
          .deleteImg{
            position: absolute;
            width: 20rpx;
            height: 20rpx;
            right: -6rpx;
            top: -16rpx;
            color: red;
            background: #fff;
            .iconfont{
              background:#fff;
              border-radius:100%;
            }
          }
          .addBtn {
            position: relative;
            width: 120rpx;
            height: 120rpx;
            &:before,
            &:after {
              content: ' ';
              position: absolute;
              top: 50%;
              left: 50%;
              transform: translate(-50%, -50%);
              background-color: #ccc;
            }


            &:before {
              width: 80rpx;
              height: 3rpx;
            }
            &:after {
              width: 3rpx;
              height: 80rpx;
            }
            &:active {
              border-color: #bbb;
              &:before,
              &:after {
                background-color: #bbb;
              }
            }
          }
        }
      }
    }
  }
}

.productGroupBottom {
  width: 100%;
  height: 80rpx;
  border-top: 1px solid #ededed;
  position: fixed;
  bottom: 0;
  background: #fff;
  z-index: 1001;
  display: flex;
  align-items: center;
  justify-content: space-between;
  .home{
    display:flex;
    flex: 1;
    padding-left: 30rpx;
    text-align: left;
    i{
      padding-left: 10rpx;
      margin-right: 6rpx;
    }

    text{
      color: @primary-green;
      font-size: 36rpx;
    }
  }
  .btn{
    width: 200rpx;
    height: 80rpx;
    line-height: 80rpx;
    font-size: 30rpx;
    text-align: center;
    background: @primary-color;
    border-radius: 0;
    color: #fff;
  }
  .btnShare{
    width: 200rpx;
    height: 80rpx;
    line-height: 80rpx;
    font-size: 30rpx;
    text-align: center;
    background: #d1e5ff;
    border-radius: 0;
  }
}

.valiPopup{
  width: 500rpx;
  background: #fff;
  border-radius: 6rpx;
  .head{
    height: 80rpx;
    line-height: 80rpx;
    border-bottom: 1px solid #dedede;
    text-align: center;
    font-size: 28rpx;
  }
  .con{
    padding: 0 20rpx 30rpx;
    .item{
      display: flex;
      justify-content: space-between;
      padding: 10rpx 0;
      border-bottom: 2rpx solid #eee;
      line-height: 60rpx;
      &:last-child{
        border-bottom: 0;
      }
      .inputPhone{
        width: 100%;
        height: 60rpx;
      }
      .inputCode{
        width: 300rpx;
        height: 60rpx;
      }
      .sendCode{
        float: right;
        margin-right: 20rpx;
        .sendLink{
          color: @primary-green;
        }
      }
      &.btnWrap{
        display: flex;
        justify-content: space-between;
        margin-top: 20rpx;
        .btnDefault, .btnPrimary{
          width: 150rpx;
        }
      }
    }
    .errorTip{
      color: red;
      text-align: left;
    }
  }
}

</style>
<template>
  <view class="productGroup">
    <import src="../plugins/wxParse/wxParse.wxml" />
    <view class="productList">
      <view class="productListBox">
        <view class="item">
            <view class="detailCon">
              <view class="pic">
                <view class="tag">{{productType}}</view>
                <image src="{{img}}"></image>
              </view>
              <view class="info">
                <view class="tit">
                  <navigator url="/pages/productDetail?id={{productId}}">{{productName}}</navigator>
                </view>
                <view class="des">
                  <view class="leftBox">
                    <view class="list">拼团类型：<text>{{groupInfo.peopleNum}}人团</text></view>
                    <view class="list">拼团价：￥<text>{{groupInfo.collagePrice}}</text></view>
                    <view class="list">剩余时间：{{remainingTime}}</view>
                  </view>
                </view>
              </view>
            </view>
          </view>
      </view>
    </view>

    <view class="groupPerson">
      <view class="itemBoxTit">{{isClose ? '已成团' : '拼团中'}}</view>

      <view class="itemBoxCon">
        <block wx:for="{{groupPerson}}" key="item" item="item" wx:key="key">
          <view class="item">
            <image src="{{item.userImageUrl}}"/>
          </view>
        </block>

        <!-- <block wx:for="{{groupPersonRemain}}" wx:key="key"> -->
          <view class="item" wx:for="{{groupPersonRemain}}" key="item" item="item" wx:key="key">
            <view class="avatarPlaceholder">?</view>
          </view>
        <!-- </block> -->
      </view>
    </view>

    <view class="detailInfo">
      <view class="itemBoxTit">产品介绍</view>

      <view class="itemBoxCon">
        <view class="wxParse-p">
          <template is="wxParse" data="{{wxParseData:productIntroductionHTML.nodes}}" />
        </view>
      </view>
    </view>
  </view>

  <zan-popup
    show="{{ showValiPhonePopup }}"
  >
    <view class="valiPopup">
      <view class="head">验证手机号码</view>
      <view class="con">
        <view class="item">
          <view><input type="text" placeholder="请输入手机号" value="{{phone}}" @change="handlePhoneChange" class="inputPhone" /></view>
        </view>
        <view class="errorTip" wx:if="{{phoneError}}">{{phoneErrorTxt}}</view>
        <view class="item">
          <input type="text" class="inputCode" value="{{code}}" @change="handleCodeChange" placeholder="请输入验证码" />
          <view class="sendCode">
            <text wx:if="{{sendMsgDisabled}}">{{time+'秒后获取'}}</text>
            <text @tap="sendCode" wx:else="{{sendMsgDisabled}}" class="sendLink">获取验证码</text>
          </view>
        </view>
        <view class="errorTip" wx:if="{{codeError}}">验证码错误</view>
        <view class="item btnWrap">
          <button class="btnDefault" @tap="hideValiPhonePopup">取消</button>
          <button class="btnPrimary btnSubmit" @tap="addPhoneAndNext">提交</button>
        </view>
      </view>
    </view>
  </zan-popup>

  <view class="productGroupBottom">
    <view class="home" @tap="homePage">
      <view><i class="iconfont icon-home1"></i></view>
      <view>首页</view>
    </view>
    
    <view wx:if="{{!isClose}}">
      <button class="btnShare" open-type="share">立即分享</button>
      <button wx:if="{{!isLogin && !isAdmin}}" class="btn" open-type="getUserInfo" type="primary" lang="zh_CN"  bindgetuserinfo="loginAndOrder">立即参团</button>
      <view class="btn" @tap="joinGroup" wx:if="{{!isAdmin && isLogin}}">立即参团</view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import Toast from 'wepy-com-toast'
import config from '@/utils/config'
import Util from '@/utils/util'
import WxParse from "@/plugins/wxParse/wxParse"


import mixinsIndex from '@/mixins/index'

export default class ProductGroup extends wepy.page {
  config = {
    navigationBarTitleText: '拼团',
    usingComponents: {
      "zan-icon": "./../assets/libs/zanui/icon/index",
      "zan-cell": "./../assets/libs/zanui/cell/index",
      "zan-icon": "./../assets/libs/zanui/icon/index",
      "zan-badge": "./../assets/libs/zanui/badge/index",
      "zan-panel": "./../assets/libs/zanui/panel/index",
      "zan-cell-group": "./../assets/libs/zanui/cell-group/index",
      "zan-tab": "./../assets/libs/zanui/tab/index",
      "zan-card": "./../assets/libs/zanui/card/index",
      "zan-popup": "./../assets/libs/zanui/popup/index"
    }
  }
  components = {
    toast: Toast
  }

  mixins = [mixinsIndex]

  data = {
    showValiPhonePopup: false,
    isClose: false,

    actionType: '',

    variWrapVisible: false,
    phone: '',
    phoneError: false,
    phoneErrorTxt: '',
    code: '',
    codeError: false,
    timer: '',

    isLogin: false,
    isAdmin: false,
    productId: '',
    productName: '',
    productCount: '',
    productDiscountPrice: '',
    productRawPrice: '',
    productIntroduction: '',
    productCommission: '',
    productGroupPrice: '',
    img: '',
    useStartDate: '',
    useEndDate: '',
    productType: '',

    groupInfo: {},
    joinId: '',
    groupId: '',
    groupPerson: [],
    groupPersonRemain: [],
    remainingTime: ''
  }

  computed = {
  }

  onLoad(option) {
    if(this.$parent.globalData.userKey){
      this.isLogin = true
    }

    if(option.productId){
      this.productId = option.productId
      this.groupId = option.groupId
      this.joinId = option.joinId
      
      // this.productId = '5A9D20EF67599255245A3D3679C2B40C'
      // this.groupId = '301FD3AE1766119A62BE88C32AE48318'

      // console.log(this.productId)
      // console.log(this.groupId)

      this.getProductDetail()
      // this.getGroupPerson()
    }


    /* this.productId = '97A668416A70C20A2DDEA6B6F5C8CA6A'
    this.groupId = 'D5128D07505ADC12972D2E6C94F3DBB9'
      this.joinId = 'F8A9C8BF61D1289DF71309FBC32B2F30'

      this.getProductDetail()
      */

    if(option.isAdmin){
      this.isAdmin = true
    }
  }

  onShareAppMessage(res){
    return {
      title: this.productName,
      path: '/pages/productGroup?productId=' + this.productId + '&groupId=' + this.groupId + '&joinId=' + this.joinId,  
      success: (res) => {
        console.log("转发成功", res);
      },
      fail: (res) => {
        console.log("转发失败", res);
      }
    }
  }


  async getProductDetail(){
    let res = await wepy.request({
      method: 'get',
      url: config.service.host + '/productDetail/doDetail/' + this.productId,
      header: {
        'content-type': 'application/json',
        'authorization': this.$parent.globalData.userKey,
      }
    })

    if(res){
      let data = res.data.data

      this.productName = data.name
      this.useStartDate = Util.timestampToTime(data.useStartDate)
      this.useEndDate = Util.timestampToTime(data.useEndDate)
      this.productType = this.formatType(data.priceType)
      this.productCount = data.productCount
      this.productRawPrice = data.rawPrice
      this.productDiscountPrice = data.discountPrice
      this.status = data.status
      this.productLimitTime = data.limitTime
      this.productCommission = data.commission
      this.productIntroduction = data.introduction

      WxParse.wxParse('productIntroductionHTML', 'html', data.introduction, this, 5);

      let imgs = []
      data.imageUrls.forEach(element => {
        imgs.push(element.url)
      })

      this.imgs = imgs
      this.img = data.imageUrl

      data.collages.forEach((item) => {
        if(item.id == this.groupId){
          this.groupInfo = item
        }
      })

      data.orderCollages.forEach((item) => {
        if(item.id == this.joinId){
          this.remainingTime = Util.leftTimer(item.remainingTime)
        }
      })

      this.$apply()

      this.getGroupPerson()
    }
  }

  // async getGroupUserInfo(){
  //   let res = await wepy.request({
  //     method: 'get',
  //     url: config.service.host + '/token/product/order/collage/doListUser/' + this.groupId,
  //     header: {
  //       'content-type': 'application/json',
  //       'authorization': this.$parent.globalData.userKey,
  //     }
  //   })
  // }


  async getGroupPerson(){
    let res = await wepy.request({
      method: 'get',
      url: config.service.host + '/product/order/collage/doListUser/' + this.joinId,
      header: {
        'authorization': this.$parent.globalData.userKey,
      }
    })



    if(res){
      this.groupPerson = res.data.data

      let len = this.groupInfo.peopleNum - this.groupPerson.length

      this.groupPersonRemain = this.groupInfo.peopleNum - this.groupPerson.length

      if(this.groupPersonRemain == 0){
        this.isClose = true
      }

      // for (let index = 0; index < len; index++) {
      //   this.groupPersonRemain.push({name: index})
      // }

      console.log(this.groupInfo)
      console.log(this.groupPerson)

      this.$apply()
    }
  }

  async addCart(){
    let res = await wepy.request({
      method: 'post',
      url: config.service.host + '/token/product/order/doAdd',
      header: {
        'content-type': 'application/json',
        'authorization': this.$parent.globalData.userKey,
      },
      data: {
        productId: this.productId,
        status: 0
      }
    })

    if(res){
      wx.navigateTo({
        url: '/pages/orderConfirm?id=' + this.productId
      })
    }
  }

  methods = {
    async addPhoneAndNext() {
      let checkCode = await wepy.request({
        url: config.service.host + '/code/check',
        header: {
          'Cookie':'JSESSIONID=' + this.codeCallback
        },
        data: {
          smsCode: this.code
        }
      })

      if(checkCode.data.code == -1){
        this.codeError = true
        return
      }

      let applyProducter = await wepy.request({
        method: 'post',
        url: config.service.host + '/token/user/doUpdate',
        data: {
          accountType: -1,
          phone: this.phone
        },
        header: {
          'content-type': 'application/json',
          'authorization': this.$parent.globalData.userKey,
        }
      })

      let userInfo = wepy.getStorageSync('userInfo')
      userInfo['phone'] = this.phone

      wepy.setStorageSync('userInfo', userInfo)
      
      wx.hideLoading()

      wx.navigateTo({
        url: '/pages/orderGroupConfirm?productId=' + this.productId + '&collageId=' + this.groupId + '&joinId=' + this.joinId + '&groupPrice=' + this.groupInfo.collagePrice + '&isJoin=true'
      })

    },

    joinGroup(){
      wx.navigateTo({
        url: '/pages/orderGroupConfirm?productId=' + this.productId + '&collageId=' + this.groupId + '&joinId=' + this.joinId + '&groupPrice=' + this.groupInfo.collagePrice + '&isJoin=true'
      })
    },

    async loginAndOrder(e) {
      if (e.detail.errMsg == 'getUserInfo:ok') {
        wx.showLoading({
          title: '处理中...',
        })

        let res = await wepy.login()
        if (res.code) {
          let userInfo = e.detail.userInfo

          // let userSecretInfo = await wepy.request({
          //   url: 'https://api.weixin.qq.com/sns/jscode2session?appid=wx84b8e864c4dca96b&secret=794a964ab1d0853cb0b0955c625f1f8a&js_code='+res.code+'&grant_type=authorization_code'
          // })

          // let userOpenId = userSecretInfo.data.openid


          let userSecretInfo = await wepy.request({
            method: 'post',
            url: config.service.host + '/weixin/login?code='+res.code
          })

          let userOpenId = userSecretInfo.data.data

          let loginInfo = await wepy.request({
            method: 'post',
            url: config.service.host + '/auto/doLogin',
            data: {
              loginToken: userOpenId, 
              autoLogin: 1, 
              loginName: encodeURIComponent(userInfo.nickName), 
              loginPassword: userOpenId,
              imageurl: userInfo.avatarUrl,
              realName: Util.replaceEmoji(userInfo.nickName)
            },
            header: {
              'content-type': 'application/json'
            }
          })

          this.$parent.globalData.userKey = 'Bearer ' + loginInfo.data.data.token
          this.$apply()
          wepy.setStorageSync('userKey', 'Bearer ' + loginInfo.data.data.token)

          let phone = loginInfo.data.data.phone

          wepy.setStorageSync('userInfo', loginInfo.data.data)

          if(phone == null){
            wx.hideLoading()

            this.showValiPhonePopup = true
            this.actionType = 'group'

            this.$apply()
          }else{
            wx.hideLoading()

            wx.navigateTo({
              url: '/pages/orderGroupConfirm?productId=' + this.productId + '&collageId=' + this.groupId + '&joinId=' + this.joinId + '&groupPrice=' + this.groupInfo.collagePrice + '&isJoin=true'
            })
          }
        }
      }
    },
    
    // 发送验证码
    async sendCode(){
      if(!this.variPhone()){
        this.phoneError = true
        return
      }else{
        this.phoneError = false
      }
      let that = this

      wx.showLoading({
        title: '发送中...',
      })
      let res = await wepy.request({
        url: config.service.host + '/sendRegisterCode',
        data: {
          phoneNo: this.phone
        }
      })
      if(res){
        this.sendMsgDisabled = true
        this.time = 60
        this.$apply()

        let interval = setInterval(() => {
          if ((that.time--) <= 0) {
            that.time = 60;
            that.sendMsgDisabled = false;
            clearInterval(interval);
            that.$apply();
          }
          that.$apply()
        }, 1000)

        this.codeCallback = res.data.data

        wx.hideLoading()
      }
    },
    
    homePage() {
      wepy.switchTab({
        url: '/pages/index'
      })
    },
    paymentSubmit(){
      wx.switchTab({  
        url: '/pages/my',  
      })
    }
  }

  events = {
    
  }
}
</script>
