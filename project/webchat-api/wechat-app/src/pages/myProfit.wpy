<style lang="less">
@import "../styles/variable";

.profitWrap{
  .summary{
    box-sizing: border-box;
    display: flex;
    // justify-content: space-between;
    height: 80rpx;
    padding: 20rpx 20rpx;
    background: #fff;
    line-height: 40rpx;
    .num{
      margin-right: 30rpx;
      padding-right: 20rpx;
      border-right: 1px solid #ddd;
    }
  }
  .productList{
    .types{
      display: flex;
      padding: 20rpx 30rpx;
      background: #fff;
      .btn{
        width: 70px;
        height: 30px;
        background: #f2f2f2;
        border-color: #f2f2f2;
        border-radius: 60rpx;
        text-align: center;
        line-height: 30px;
        font-size: 13px;
        &.active{
          background: @primary-color;
          border-color: @primary-color;
          color: #fff;
        }
      }
    }
    .productListBox{
      padding-bottom: 180rpx;
    }
    .item{
      position: relative;
      display: flex;
      margin-top: 20rpx;
      margin-right: 20rpx;
      margin-left: 20rpx;
      .checkStatus{
        margin: 100rpx 20rpx 0 20rpx;
        color: @primary-color;
        .iconfont{
          font-size: 40rpx;
        }
      }
      .detailCon{
        flex: 1;
        display: flex;
        background: #fff;
        .pic{
          position: relative;
          width: 250rpx;
          height: 250rpx;
          .tag{
            position: absolute;
            left: 0;
            top: 0;
            height: 40rpx;
            line-height: 40rpx;
            font-size: 24rpx;
            background: red;
            color: #fff;
            padding: 0 10rpx;
          }
          image{
            width: 250rpx;
            height: 250rpx;
          }
        }
        .info{
          flex: 1;
          margin: 0 20rpx;
          display: flex;
          .tit{
            flex: 1;
            margin-top: 20rpx;
            overflow: hidden;
            font-size: 28rpx;
          }

          .des{
            box-sizing: border-box;
            width: 180rpx;
            height: 230rpx;
            margin: 10rpx 0 0 10rpx;
            padding-top: 70rpx;
            border-left: 1px solid #ddd;
            text-align: center;
            line-height: 50rpx;
            navigator{
              display: inline;
            }
            .num{
              text{
                color: @primary-yellow;
              }
            }
            .price{
              text{
                color: @primary-green;
              }
            }
          }
        }
      }
    }
  }
}


</style>
<template>
  <view class="profitWrap">

    <zan-tab
      list="{{ tab.list }}"
      selected-id="{{ tabSelectedId }}"
      bindtabchange="handleTabChange"
    />

    <view wx:if="{{ tabSelectedId == 2 }}" class="productList">
      <view class="summary">
        <view class="num">成单：{{orderTotalNum}}</view>
        <view class="">已获取收益：￥{{orderTotalMoney}}</view>
      </view>
      <view class="productListBox">
        <repeat for="{{orderList}}" key="index" index="index" item="item">
          <view class="item">
            <view class="detailCon">
              <view class="pic">
                <!-- <view class="tag">{{item.tag}}</view> -->
                <image src="{{item.imageUrl  || '../assets/images/product_img_blank.png'}}"></image>
              </view>
              <view class="info">
                <view class="tit">
                  <navigator url="/pages/productDetail?id={{item.productId}}">{{item.productName}}</navigator>
                </view>

                <view class="des">
                  <view class="num">完成: 
                    <navigator url="/pages/myProfitDetail?productId={{item.productId}}"><text>{{item.salesCount}}单</text></navigator>
                  </view>
                  <view class="price">收益: <text>￥{{item.totalProfit}}</text></view>
                </view>
              </view>
            </view>
          </view>
        </repeat>

        <view class="noData" wx:if="{{orderList.length == 0}}">
          <image src="../assets/images/icon_empty.png"></image>
          <text>没有相关数据！</text>
        </view>
      </view>
    </view>

    <view wx:if="{{ tabSelectedId == 1 }}" class="productList">
      <view class="summary">
        <view class="num">成单：{{shareTotalNum}}</view>
        <view class="">已获取收益：￥{{shareTotalMoney}}</view>
      </view>
      <view class="productListBox">
        <repeat for="{{shareList}}" key="index" index="index" item="item">
          <view class="item">
            <view class="detailCon">
              <view class="pic">
                <!-- <view class="tag">{{item.tag}}</view> -->
                <image src="{{item.imageUrl  || '../assets/images/product_img_blank.png'}}"></image>
              </view>
              <view class="info">
                <view class="tit">
                  <navigator url="/pages/productDetail?id={{item.productId}}">{{item.productName}}</navigator>
                </view>

                <view class="des">
                  <view class="num">完成: 
                    <navigator url="/pages/myProfitDetail?productId={{item.productId}}"><text>{{item.salesCount}}单</text></navigator>
                  </view>
                  <view class="price">收益: <text>￥{{item.totalProfit}}</text></view>
                </view>
              </view>
            </view>
          </view>
        </repeat>

        <view class="noData" wx:if="{{shareList.length == 0}}">
          <image src="../assets/images/icon_empty.png"></image>
          <text>没有相关数据！</text>
        </view>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import Counter from 'counter' // alias example
  import moduleA from 'module-a' // aliasFields ignore module example
  import Toast from 'wepy-com-toast'
  import testMixin from '../mixins/index'
  import config from '@/utils/config'
  import Util from '@/utils/util'

  export default class Product extends wepy.page {
    config = {
      navigationBarTitleText: '我的收益',
      usingComponents: {
        "zan-icon": "./../assets/libs/zanui/icon/index",
        "zan-cell": "./../assets/libs/zanui/cell/index",
        "zan-icon": "./../assets/libs/zanui/icon/index",
        "zan-badge": "./../assets/libs/zanui/badge/index",
        "zan-panel": "./../assets/libs/zanui/panel/index",
        "zan-cell-group": "./../assets/libs/zanui/cell-group/index",
        "zan-tab": "./../assets/libs/zanui/tab/index",
        "zan-card": "./../assets/libs/zanui/card/index"
      }
    }
    components = {
      toast: Toast
    }

    mixins = [testMixin]

    data = {
      orderList: [],
      orderTotalNum: '',
      orderTotalMoney: '',
      shareList: [],
      shareTotalNum: 0,
      shareTotalMoney: 0,
      selectAll: false,
      tab: {
        list: [{
          id: 2,
          title: '订单收益'
        }, {
          id: 1,
          title: '分享收益'
        }]
      },
      tabSelectedId: 2,
    }

    computed = {
    }

    methods = {
      handleTabChange(e){
        if (this.tabSelectedId == e.detail) {
          return false
        } else {
          this.tabSelectedId = e.detail
        }
      },
    }

    events = {
      
    }


    async getProfitOrderList(){
      wx.showLoading({
        title: '加载中...',
      })

      const res = await wepy.request({
        url: config.service.host + '/token/cashflow/product/doSearch',
        header: {
          'authorization': this.$parent.globalData.userKey,
        },
      })
      this.orderList = res.data.data.data
      this.$apply()

      wx.hideLoading()
    }

    async getProfitOrderTotal(){
      wx.showLoading({
        title: '加载中...',
      })

      const res = await wepy.request({
        url: config.service.host + '/token/cashflow/total',
        header: {
          'authorization': this.$parent.globalData.userKey,
        },
        data: {
          profitType: this.tabSelectedId
        }
      })
      this.orderTotalNum = res.data.data.salesCount
      this.orderTotalMoney = res.data.data.totalProfit
      this.$apply()

      wx.hideLoading()
    }

    onLoad() {
      this.getProfitOrderList()
      this.getProfitOrderTotal()
    }

    onShow(){
      console.log(this.$parent.globalData.userKey)

      // if(!this.$parent.globalData.userKey){
      //   wx.navigateTo({
      //     url: "/pages/login"
      //   })
      // }else{
      //   this.getProductList()
      // }
    }
  }
</script>
