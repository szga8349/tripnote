<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.lenovo.tripnote.webchat.mapper.BStoreMapper" >
  <resultMap id="BaseResultMap" type="com.lenovo.tripnote.webchat.entity.BStore" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="store_name" property="storeName" jdbcType="VARCHAR" />
    <result column="store_address" property="storeAddress" jdbcType="VARCHAR" />
    <result column="store_url" property="storeUrl" jdbcType="VARCHAR" />
    <result column="store_logo" property="storeLogo" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="latitude" property="latitude" jdbcType="REAL" />
    <result column="longitude" property="longitude" jdbcType="REAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, store_name, store_address, store_url, store_logo, create_user_id, latitude, longitude, 
    create_time
  </sql>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lenovo.tripnote.webchat.entity.BStoreExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_store
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="com.lenovo.tripnote.webchat.entity.BStoreExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_store
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.lenovo.tripnote.webchat.entity.BStoreExample" >
    delete from b_store
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.lenovo.tripnote.webchat.entity.BStoreExample" resultType="java.lang.Integer" >
    select count(*) from b_store
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update b_store
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.storeName != null" >
        store_name = #{record.storeName,jdbcType=VARCHAR},
      </if>
      <if test="record.storeAddress != null" >
        store_address = #{record.storeAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.storeUrl != null" >
        store_url = #{record.storeUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.storeLogo != null" >
        store_logo = #{record.storeLogo,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.latitude != null" >
        latitude = #{record.latitude,jdbcType=REAL},
      </if>
      <if test="record.longitude != null" >
        longitude = #{record.longitude,jdbcType=REAL},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update b_store
    set id = #{record.id,jdbcType=INTEGER},
      store_name = #{record.storeName,jdbcType=VARCHAR},
      store_address = #{record.storeAddress,jdbcType=VARCHAR},
      store_url = #{record.storeUrl,jdbcType=VARCHAR},
      store_logo = #{record.storeLogo,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      latitude = #{record.latitude,jdbcType=REAL},
      longitude = #{record.longitude,jdbcType=REAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from b_store
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from b_store
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lenovo.tripnote.webchat.entity.BStore" useGeneratedKeys="true" keyProperty="id" >
    insert into b_store (store_name, store_address, store_url, 
      store_logo, create_user_id, latitude, 
      longitude, create_time)
    values (#{storeName,jdbcType=VARCHAR}, #{storeAddress,jdbcType=VARCHAR}, #{storeUrl,jdbcType=VARCHAR}, 
      #{storeLogo,jdbcType=VARCHAR}, #{createUserId,jdbcType=INTEGER}, #{latitude,jdbcType=REAL}, 
      #{longitude,jdbcType=REAL}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lenovo.tripnote.webchat.entity.BStore" useGeneratedKeys="true" keyProperty="id" >
    insert into b_store
    <trim prefix="(" suffix=")" suffixOverrides="," >
      store_name,
      store_address,
      store_url,
      store_logo,
      create_user_id,
      latitude,
      longitude,
      create_time,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{storeName,jdbcType=VARCHAR},
      #{storeAddress,jdbcType=VARCHAR},
      #{storeUrl,jdbcType=VARCHAR},
      #{storeLogo,jdbcType=VARCHAR},
      #{createUserId,jdbcType=INTEGER},
      #{latitude,jdbcType=REAL},
      #{longitude,jdbcType=REAL},
      #{createTime,jdbcType=TIMESTAMP},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lenovo.tripnote.webchat.entity.BStore" >
    update b_store
    <set >
      <if test="storeName != null" >
        store_name = #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="storeAddress != null" >
        store_address = #{storeAddress,jdbcType=VARCHAR},
      </if>
      <if test="storeUrl != null" >
        store_url = #{storeUrl,jdbcType=VARCHAR},
      </if>
      <if test="storeLogo != null" >
        store_logo = #{storeLogo,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="latitude != null" >
        latitude = #{latitude,jdbcType=REAL},
      </if>
      <if test="longitude != null" >
        longitude = #{longitude,jdbcType=REAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lenovo.tripnote.webchat.entity.BStore" >
    update b_store
    set store_name = #{storeName,jdbcType=VARCHAR},
      store_address = #{storeAddress,jdbcType=VARCHAR},
      store_url = #{storeUrl,jdbcType=VARCHAR},
      store_logo = #{storeLogo,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      latitude = #{latitude,jdbcType=REAL},
      longitude = #{longitude,jdbcType=REAL},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>