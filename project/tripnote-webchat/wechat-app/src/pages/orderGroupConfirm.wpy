<style lang="less">
@import "../styles/variable";

.payment{
  .productList{
    .types{
      display: flex;
      padding: 20rpx 30rpx;
      background: #fff;
      .btn{
        width: 70px;
        height: 30px;
        background: #f2f2f2;
        border-color: #f2f2f2;
        border-radius: 60rpx;
        text-align: center;
        line-height: 30px;
        font-size: 13px;
        &.active{
          background: @primary-color;
          border-color: @primary-color;
          color: #fff;
        }
      }
    }
    .item{
      position: relative;
      display: flex;
      margin-top: 20rpx;
      margin-right: 20rpx;
      margin-left: 20rpx;
      .checkStatus{
        margin: 100rpx 20rpx 0 20rpx;
        color: @primary-color;
        .iconfont{
          font-size: 40rpx;
        }
      }
      .detailCon{
        flex: 1;
        display: flex;
        background: #fff;
        .pic{
          position: relative;
          width: 250rpx;
          height: 250rpx;
          .tag{
            position: absolute;
            left: 0;
            top: 0;
            height: 40rpx;
            line-height: 40rpx;
            font-size: 24rpx;
            background: red;
            color: #fff;
            padding: 0 10rpx;
          }
          image{
            width: 250rpx;
            height: 250rpx;
          }
        }
        .info{
          flex: 1;
          margin: 10rpx 20rpx 0;
          .tit{
            height: 76rpx;
            overflow: hidden;
            font-size: 28rpx;
          }

          .des{
            margin-top: 20rpx;
            .leftBox{
              float: left;
              .list{
                line-height: 44rpx;
                color: #999;
                font-size: 24rpx;
              }
            }
            .rightBox{
              position: absolute;
              right: 20rpx;
              bottom: 20rpx;
              text-align: right;
              .price{
                color: @primary-green;
                text{
                  font-size: 40rpx;
                }
              }
              .btnOpt{
                .btn{
                  float: left;
                  width: 120rpx;
                  height: 50rpx;
                  margin-top: 16rpx;
                  margin-left: 20rpx;
                  border: 1px solid @primary-color;
                  border-radius: 50rpx;
                  line-height: 50rpx;
                  text-align: center;
                  color: @primary-color;
                }
              }
            }

          }
        }
      }
    }
  }

  .orderInfo{
    margin: 20rpx 20rpx 100rpx;
    background: #fff;
    .tit{
      font-size: 32rpx;
    }
    .fieldCon:last-child{
      border-bottom: 0;
    }

    .fieldCon {
      display: flex;
      margin: 0 30rpx;
      padding: 18rpx 0;
      border-bottom: 1px solid @border-color-grey;
      font-size: 28rpx;
      &.des {
        padding-top: 30rpx;
        border-bottom: 0;
        .label{
          line-height: 1;
        }
      }
      .label {
        width: 130rpx;
        padding-right: 20rpx;
        line-height: 50rpx;
        text{
          color: red;
        }
      }
      .con {
        flex: 1;
        input{
          height: 50rpx;
          min-height: 50rpx;
          line-height: 50rpx;
        }
        .fieldDes {
          min-height: 200rpx;
        }
        .groupList{
          display: flex;
          justify-content: space-between;
          margin-bottom: 16rpx;
          .item{
            display: flex;
            align-items:center;
            border-bottom: 1px solid #ddd;
            input{
              width: 80rpx;
            }
          }
        }
        &.fieldPriceCon{
          display: flex;
          justify-content: space-between;
          input{
            width: 90px;
          }
          .label{
            width: 120rpx;
          }
        }
        .fee{
          line-height: 50rpx;
          color: @primary-color;
        }
      }
      .pics {
        display: flex;
        flex-wrap: wrap;
        .picItem {
          position: relative;
          width: 120rpx;
          height: 120rpx;
          margin: 0 30rpx 20rpx 0;
          border: 1px solid @border-color-grey;
          text-align: center;
          .tag{
            position: absolute;
            left: 0;
            top: 0;
            height: 36rpx;
            line-height: 36rpx;
            font-size: 24rpx;
            background: red;
            color: #fff;
            padding: 0 8rpx;
          }

          // &.cover{
          //   border: 1px solid @primary-green;
          // }

          image {
            width: 120rpx;
            height: 120rpx;
          }
          .setBtn {
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 30rpx;
            background: rgba(0, 0, 0, 0.3);
            line-height: 30rpx;
            text-align: center;
            color: #fff;
            font-size: 20rpx;
          }
          .deleteImg{
            position: absolute;
            width: 20rpx;
            height: 20rpx;
            right: -6rpx;
            top: -16rpx;
            color: red;
            background: #fff;
            .iconfont{
              background:#fff;
              border-radius:100%;
            }
          }
          .addBtn {
            position: relative;
            width: 120rpx;
            height: 120rpx;
            &:before,
            &:after {
              content: ' ';
              position: absolute;
              top: 50%;
              left: 50%;
              transform: translate(-50%, -50%);
              background-color: #ccc;
            }


            &:before {
              width: 80rpx;
              height: 3rpx;
            }
            &:after {
              width: 3rpx;
              height: 80rpx;
            }
            &:active {
              border-color: #bbb;
              &:before,
              &:after {
                background-color: #bbb;
              }
            }
          }
        }
      }
    }
  }
}

.paymentBottom {
  width: 100%;
  border-top: 1px solid #ededed;
  position: fixed;
  bottom: 0;
  background: #fff;
  z-index: 1001;
  display: flex;
  align-items: center;
  justify-content: flex-end;
  .price{
    flex: 1;
    padding-left: 30rpx;
    text{
      color: @primary-green;
      font-size: 36rpx;
    }
  }
  .btn{
    flex: 1;
    height: 80rpx;
    line-height: 80rpx;
    font-size: 30rpx;
    text-align: center;
    background: @primary-color;
    border-radius: 0;
    color: #fff;
  }
}

</style>
<template>
  <view class="payment">
    <view class="productList">
      <view class="productListBox">
        <view class="item">
            <view class="detailCon">
              <view class="pic">
                <view class="tag">{{productType}}</view>
                <navigator url="/pages/productDetail?id={{productId}}">
                  <image src="{{img}}"></image>
                </navigator>
              </view>
              <view class="info">
                <view class="tit">
                  <navigator url="/pages/productDetail?id={{productId}}">{{productName}}</navigator>
                </view>
                <view class="des">
                  <view class="leftBox">
                    <!-- <view class="list">使用日期：{{useStartDate}} 至 {{useEndDate}}</view> -->
                    <view class="list">拼团人数：<text>{{collageInfo.peopleNum}}</text></view>
                    <view class="list">拼团价：￥<text>{{productGroupPrice}}</text></view>
                  </view>
                </view>
              </view>
            </view>
          </view>
      </view>
    </view>

    <view class="orderInfo">
      <view class="fieldCon">
        <view class="tit">预订信息</view>
      </view>
      <view class="fieldCon">
        <view class="label"><text>*</text>姓名：</view>
        <view class="con">
          <input type="text" placeholder-style="placeholderClass" placeholder="请输入姓名" value="{{orderUserName}}" data-type="orderUserName" @input="handleInputChange"/>
        </view>
      </view>
      <view class="fieldCon">
        <view class="label"><text>*</text>手机号：</view>
        <view class="con">
          <input type="text" placeholder-style="placeholderClass" placeholder="请输入手机号" value="{{orderUserPhone}}" data-type="orderUserPhone" @input="handleInputChange"/>
        </view>
      </view>
      <view class="fieldCon">
        <view class="label"><text>*</text>身份证：</view>
        <view class="con">
          <input type="text" placeholder-style="placeholderClass" placeholder="输入是18位的身份证号码" value="{{cardId}}" data-type="cardId" @input="handleInputChange"/>
        </view>
      </view>
      <view class="fieldCon">
        <view class="label">出发地：</view>
        <view class="con">
          <input type="text" placeholder-style="placeholderClass" placeholder="请填写出发地" data-type="place" value="{{place}}" @input="handleInputChange"/>
        </view>
      </view>
      
      <view class="fieldCon">
        <view class="label">使用日期：</view>
        <view class="con">
          <picker mode="date" value="{{useDate}}" start="2018-01-01" end="2019-09-01" data-type="useDate" @change="handleInputChange">
            <input type="text" placeholder-style="placeholderClass" value="{{useDate}}" disabled="{{true}}" placeholder="请输入时间"/>
          </picker>
        </view>
      </view>
      <view class="fieldCon">
        <view class="label">其他信息：</view>
        <view class="con">
          <textarea class="fieldDes" auto-height placeholder-style="placeholderClass" placeholder="填写其他信息" 
            value="{{otherInfo}}"
            data-type="otherInfo" 
            @input="handleInputChange"
          />
        </view>
      </view>
    </view>
  </view>

  <view class="paymentBottom">
    <view class="price">
      预付款：￥<text>100</text>
    </view>
    <button class="btn" hover-class="btnHoverClass" @tap="paymentSubmit" hover-class="btnHoverClass">立即支付</button>
  </view>

  <toast />
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import Counter from 'counter' // alias example
  import moduleA from 'module-a' // aliasFields ignore module example
  import Toast from 'wepy-com-toast'
  import testMixin from '@/mixins/index'
  import config from '@/utils/config'
  import Util from '@/utils/util'

  export default class Product extends wepy.page {
    config = {
      navigationBarTitleText: '确认订单',
      usingComponents: {
        "zan-icon": "./../assets/libs/zanui/icon/index",
        "zan-cell": "./../assets/libs/zanui/cell/index",
        "zan-icon": "./../assets/libs/zanui/icon/index",
        "zan-badge": "./../assets/libs/zanui/badge/index",
        "zan-panel": "./../assets/libs/zanui/panel/index",
        "zan-cell-group": "./../assets/libs/zanui/cell-group/index",
        "zan-tab": "./../assets/libs/zanui/tab/index",
        "zan-card": "./../assets/libs/zanui/card/index"
      }
    }
    components = {
      counter1: Counter,
      counter2: Counter,
      toast: Toast
    }

    mixins = [testMixin]

    data = {
      productId: '',
      joinId: '',
      isFull: '',
      isJoin: false,
      collageInfo: '',
      productCollageId: '',
      productName: '',
      productCount: '',
      productDiscountPrice: '',
      productRawPrice: '',
      productIntroduction: '',
      productCommission: '',
      productGroupPrice: '',
      img: '',
      useStartDate: '',
      useEndDate: '',
      productType: '',
      orderUserName: '',
      orderUserPhone: '',
      place: '',
      cardId: '',
      useDate: '',
      otherInfo: '',
    }

    computed = {
    }

    onLoad(option) {
      if(option.productId){
        this.productId = option.productId
        this.getProductDetail(option.productId)
      }
      if(option.collageId){
        this.productCollageId = option.collageId
      }
      if(option.groupPrice){
        this.productGroupPrice = option.groupPrice
      }
      if(option.isJoin){
        this.isJoin = true
        this.joinId = option.joinId
        this.isFull = option.isFull
      }
    }

    async getProductDetail(id){
      let self = this

      let res = await wepy.request({
        method: 'get',
        url: config.service.host + '/productDetail/doDetail/' + id,
        header: {
          'content-type': 'application/json',
          'authorization': self.$parent.globalData.userKey,
        }
      })

      if(res){
        let data = res.data.data

        self.productName = data.name
        self.useStartDate = Util.timestampToTime(data.useStartDate)
        self.useEndDate = Util.timestampToTime(data.useEndDate)
        self.productType = self.formatType(data.priceType)
        self.productCount = data.productCount
        self.productRawPrice = data.rawPrice
        self.productDiscountPrice = data.discountPrice
        self.status = data.status
        self.productLimitTime = data.limitTime
        self.productCommission = data.commission
        self.productIntroduction = data.introduction

        let imgs = []
        data.imageUrls.forEach(element => {
          imgs.push(element.url)
        })

        data.collages.forEach(element => {
          if(element.id == this.productCollageId){
            this.collageInfo = element
            this.collageInfo['productRawPrice'] = data.rawPrice
          }
          imgs.push(element.url)
        })

        self.imgs = imgs
        self.img = data.imageUrl

        self.$apply()
      }
    }

    statusFilter(){
      this.tab1NoData = true
      let self = this

      this.productList.forEach(item => {
        if(self.tab1BtnChecked == -2){
          item['visible'] = true
          self.tab1NoData = false
        }else{
          if(item.status == self.tab1BtnChecked){
            item['visible'] = true
            self.tab1NoData = false
          }else{
            item['visible'] = false
          }
        }
      })
    }

    groupSuccess(collageInfo, productName, joinId){
      wx.request({
        method: 'post',
        url: config.service.host + '/token/product/order/collage/doFormId/'+joinId,
        header: {
          'content-type': 'application/json',
          'authorization': wepy.getStorageSync('userKey')
        },
        success: function(res){
          let personInfo = res.data.data

          console.log('personInfo', personInfo)

          personInfo.forEach(item => {
            wepy.request({
              method: 'post',
              url: config.service.host + '/weixin/sentTemplateGroupSuccessMessage',
              header: {
                'content-type': 'application/json'
              },
              data: {
                formId: item.formId,
                openId: item.loginToken,
                productName: productName,
                groupNum: collageInfo.peopleNum,
                rawPrice: collageInfo.productRawPrice,
                groupPrice: collageInfo.collagePrice,
                tips: '拼团成功，请尽快到“我的订单”支付余款！'
              }
            })
          })
        }
      })
    }

    // 拼团支付
    async orderGroupPay(payEntity){
      let self = this

      let { 
        collageInfo,
        productId, 
        productCollageId, 
        orderId, 
        price, 
        productName, 
        type, 
        joinId, 
        isFull,
        orderUserName, 
        orderUserPhone,
        place,
        cardId,
        useDate,
        otherInfo
      } = payEntity 

      console.log(payEntity)

      let userInfo = wepy.getStorageSync('userInfo')
      let userKey = wepy.getStorageSync('userKey')
      let openid = userInfo.loginToken

      let res = await wepy.request({
        method: 'post',
        url: config.service.host + '/weixin/wxPay',
        data: {
          openid,
          total_fee: 1,
          product_id: productId,
          out_trade_no: new Date().getTime(),
          body: productName
        },
        header: {
          'content-type': 'application/json'
        }
      })
      if(res.data.code == 1){
        let prepay_id = res.data.data.package.split('=')[1]

        console.log('prepay_id', prepay_id)

        wx.requestPayment({
          timeStamp: res.data.data.timeStamp,
          nonceStr: res.data.data.nonceStr,
          package: res.data.data.package,
          signType: 'MD5',
          paySign: res.data.data.paySign,
          success:function(res){
            if(res.errMsg == 'requestPayment:ok'){
              // wx.request({
              //   method: 'post',
              //   url: config.service.host + '/weixin/sentOrderSuccessMessage',
              //   header: {
              //     'content-type': 'application/x-www-form-urlencoded'
              //   },
              //   data: {
              //     form_id: prepay_id
              //   }
              // })

              

              wx.request({
                method: 'post',
                url: config.service.host + '/token/product/order/collage/doUpdate/'+orderId,
                header: {
                  'content-type': 'application/json',
                  'authorization': userKey,
                },
                data: {
                  // productCollageId: productCollageId,
                  // productId: product_id,
                  payStatus: 2,
                  deposit: 100,
                  formId: prepay_id,
                  orderUserName, 
                  orderUserPhone,
                  place,
                  cardId,
                  useDate,
                  otherInfo
                },
                success: function(res1){
                  console.log(res1)
                  if(res1.data.code == 1){

                    if(joinId && isFull == 'true'){
                      self.groupSuccess(collageInfo, productName, joinId)
                    }

                    wx.showToast({
                      title: '支付成功',
                      icon: 'success',
                      duration: 1500
                    })
                    //setTimeout(() => {
                      if(type){
                        
                        wx.navigateTo({
                          url: '/pages/productGroup?productId=' + productId + '&groupId=' + productCollageId + '&joinId=' + joinId + '&isAdmin=true',  
                        })
                      }else{
                        wx.navigateTo({
                          url: '/pages/productGroup?productId=' + productId + '&groupId=' + productCollageId + '&joinId=' + orderId + '&isAdmin=true',  
                        })
                      }
                      
                    //}, 1500)
                  }

                }
              })



            }else{
              console.log('支付失败')
            }
          },
          'fail':function(res){
            console.log('支付fail')

            wx.request({
              method: 'post',
              url: config.service.host + '/token/product/order/collage/doDelete/'+orderId,
              header: {
                'content-type': 'application/json',
                'authorization': userKey,
              }
            })
          },
          'complete':function(res){

          }
        })
      }
    }

    methods = {
      async paymentSubmit(){
        if(this.orderUserName == '' || this.orderUserPhone == '' || this.cardId == ''){
          this.$invoke('toast', 'show', {
            title: '姓名、手机号和身份证号是必填项！',
            img: '../assets/images/alert.png',
            duration: 2000
          })
          
          return
        }


        let res
        if(this.isJoin){
          res = await wepy.request({
            method: 'post',
            url: config.service.host + '/token/product/order/collage/'+this.joinId+'/doAdd',
            data: {deposit: 100},
            header: {
              'content-type': 'application/json',
              'authorization': this.$parent.globalData.userKey,
            }
          })
        }else{
          res = await wepy.request({
            method: 'post',
            url: config.service.host + '/token/product/order/collage/doAdd',
            header: {
              'content-type': 'application/json',
              'authorization': this.$parent.globalData.userKey,
            },
            data: {
              productCollageId: this.productCollageId,
              productId: this.productId,
              collageStatus: 0
            }
          })
        }

        let orderId = res.data.data

        let payEntity = {
          productId: this.productId,
          productCollageId: this.productCollageId,
          collageInfo: this.collageInfo,
          orderId: orderId,
          price: 100,
          productName: this.productName,
          type: this.isJoin,
          joinId: this.joinId,
          isFull: this.isFull,
          orderUserName: this.orderUserName,
          orderUserPhone: this.orderUserPhone,
          place: this.place,
          cardId: this.cardId,
          useDate: this.useDate,
          otherInfo: this.otherInfo
        }

        let orderNo = res.data.data
        this.orderGroupPay(payEntity)

        

        // let res = await wepy.request({
        //   method: 'post',
        //   url: config.service.host + '/token/product/order/collage/doAdd',
        //   header: {
        //     'content-type': 'application/json',
        //     'authorization': this.$parent.globalData.userKey,
        //   },
        //   data: {
        //     productCollageId: this.productCollageId,
        //     productId: this.productId,
        //     collageStatus: 1
        //   }
        // })
        // wx.navigateTo({
        //   url: '/pages/productGroup?productId=' + this.productId + '&groupId=' + this.productCollageId,  
        // })
      }
    }

    events = {
      
    }

  }
</script>
