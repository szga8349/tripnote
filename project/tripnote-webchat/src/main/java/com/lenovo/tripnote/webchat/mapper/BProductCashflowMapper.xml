<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.lenovo.tripnote.webchat.mapper.BProductCashflowMapper" >
  <resultMap id="BaseResultMap" type="com.lenovo.tripnote.webchat.entity.BProductCashflow" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="REAL" />
    <result column="flow_time" property="flowTime" jdbcType="TIMESTAMP" />
    <result column="flow_user_id" property="flowUserId" jdbcType="INTEGER" />
    <result column="flow_user_name" property="flowUserName" jdbcType="VARCHAR" />
    <result column="flow_code" property="flowCode" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="profit_type" property="profitType" jdbcType="INTEGER" />
  </resultMap>

    <resultMap id="DetailResultMap" type="com.lenovo.tripnote.webchat.entity.vo.BProductCashFlowDetailVo" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="type" property="type" jdbcType="INTEGER" />
        <result column="money" property="money" jdbcType="REAL" />
        <result column="flow_time" property="flowTime" jdbcType="TIMESTAMP" />
        <result column="flow_code" property="flowCode" jdbcType="VARCHAR" />
        <result column="remarks" property="remarks" jdbcType="VARCHAR" />
        <result column="profit_type" property="profitType" jdbcType="INTEGER" />
        <result column="user_name" property="userName" jdbcType="VARCHAR" />
        <result column="imageurl" property="userImageUrl" jdbcType="VARCHAR" />
    </resultMap>

    
  
  
  <resultMap id="SearchResultMap" type="com.lenovo.tripnote.webchat.entity.vo.BProductCashFlowResultVo" >
  
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="productName" property="productName" jdbcType="VARCHAR" />
    <result column="price_type" property="priceType" jdbcType="INTEGER" />
    <result column="image_url" property="imageUrl" jdbcType="VARCHAR" />
    <result column="introduction" property="introduction" jdbcType="LONGVARCHAR" />
    <result column="salesCount" property="salesCount" jdbcType="INTEGER" />
    <result column="totalProfit" property="totalProfit" jdbcType="REAL" />
    
  </resultMap>
  
  
  <resultMap id="TotalResultMap" type="com.lenovo.tripnote.webchat.entity.vo.BProductCashFlowTotalVo" >
  
    <result column="salesCount" property="salesCount" jdbcType="INTEGER" />
    <result column="totalProfit" property="totalProfit" jdbcType="REAL" />
    
  </resultMap>
  <sql id="Base_Column_List" >
    id, `type`, money, flow_time, flow_user_id, flow_user_name, flow_code, remarks, product_id, 
    profit_type
  </sql>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <select id="searchBProductCashflow" resultMap="SearchResultMap" parameterType="com.lenovo.tripnote.webchat.entity.vo.BProductCashFlowSearchVo" >
    select bp.name as productName,price_type,image_url,introduction,bcount.c as salesCount,bcount.s as totalProfit,bcount.product_id  from  (select count(1) as c,sum(money) as s,product_id 
    from b_product_cashflow where type = 1
    and flow_user_id = #{record.userId,jdbcType=INTEGER}
    <if test="record.profitType != null" >
        and profit_type = #{record.profitType,jdbcType=INTEGER}
    </if>
    group by product_id ) bcount 
    left join b_product bp on bp.id =bcount.product_id
    
  </select>
  
   <select id="searchBalance" resultType="java.lang.Float" parameterType="java.lang.Integer" >
    select sum(money) from b_product_cashflow where flow_user_id = #{userId,jdbcType=INTEGER}
  </select>
  
  <select id="searchTotal" resultMap="TotalResultMap" parameterType="com.lenovo.tripnote.webchat.entity.vo.BProductCashFlowSearchVo" >
    select sum(money) as totalProfit,count(1) as salesCount from b_product_cashflow where flow_user_id = #{record.userId,jdbcType=INTEGER}
    <if test="record.profitType != null" >
        and profit_type = #{record.profitType,jdbcType=INTEGER}
    </if>
  </select>
 
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lenovo.tripnote.webchat.entity.BProductCashflowExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_product_cashflow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByExampleAndPage" resultMap="DetailResultMap" parameterType="com.lenovo.tripnote.webchat.entity.BProductCashflowExample" >
    select
    <if test="distinct" >
      distinct
    </if>
      bpc.id as id, bpc.type as `type`, bpc.money as money, bpc.flow_time as flow_time,
      bpc.flow_code as flow_code,
      bpc.remarks as remarks, bpc.profit_type as profit_type, bpc.flow_user_id as flow_user_id,
      ba.login_name as user_name, ba.imageurl as imageurl
    from b_product_cashflow bpc
      left join b_account ba
      on ba.id = bpc.pay_user_id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>

  <delete id="deleteByExample" parameterType="com.lenovo.tripnote.webchat.entity.BProductCashflowExample" >
    delete from b_product_cashflow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.lenovo.tripnote.webchat.entity.BProductCashflowExample" resultType="java.lang.Integer" >
    select count(*) from b_product_cashflow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update b_product_cashflow
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        `type` = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.money != null" >
        money = #{record.money,jdbcType=REAL},
      </if>
      <if test="record.flowTime != null" >
        flow_time = #{record.flowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.flowUserId != null" >
        flow_user_id = #{record.flowUserId,jdbcType=INTEGER},
      </if>
      <if test="record.flowUserName != null" >
        flow_user_name = #{record.flowUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.flowCode != null" >
        flow_code = #{record.flowCode,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.profitType != null" >
        profit_type = #{record.profitType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update b_product_cashflow
    set id = #{record.id,jdbcType=BIGINT},
      `type` = #{record.type,jdbcType=INTEGER},
      money = #{record.money,jdbcType=REAL},
      flow_time = #{record.flowTime,jdbcType=TIMESTAMP},
      flow_user_id = #{record.flowUserId,jdbcType=INTEGER},
      pay_user_id = #{record.payUserId,jdbcType=INTEGER},
      flow_user_name = #{record.flowUserName,jdbcType=VARCHAR},
      flow_code = #{record.flowCode,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=INTEGER},
      profit_type = #{record.profitType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from b_product_cashflow
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from b_product_cashflow
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lenovo.tripnote.webchat.entity.BProductCashflow" useGeneratedKeys="true" keyProperty="id" >
    insert into b_product_cashflow (`type`, money, flow_time, 
      flow_user_id, flow_user_name, pay_user_id, flow_code,
      remarks, product_id, profit_type
      )
    values (#{type,jdbcType=INTEGER}, #{money,jdbcType=REAL}, #{flowTime,jdbcType=TIMESTAMP}, 
      #{flowUserId,jdbcType=INTEGER}, #{flowUserName,jdbcType=VARCHAR}, #{payUserId,jdbcType=INTEGER},
      #{flowCode,jdbcType=VARCHAR},
      #{remarks,jdbcType=VARCHAR}, #{productId,jdbcType=INTEGER}, #{profitType,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lenovo.tripnote.webchat.entity.BProductCashflow" useGeneratedKeys="true" keyProperty="id" >
    insert into b_product_cashflow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      `type`,
      money,
      flow_time,
      flow_user_id,
      flow_user_name,
      flow_code,
      remarks,
      product_id,
      profit_type,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{type,jdbcType=INTEGER},
      #{money,jdbcType=REAL},
      #{flowTime,jdbcType=TIMESTAMP},
      #{flowUserId,jdbcType=INTEGER},
      #{flowUserName,jdbcType=VARCHAR},
      #{flowCode,jdbcType=VARCHAR},
      #{remarks,jdbcType=VARCHAR},
      #{productId,jdbcType=INTEGER},
      #{profitType,jdbcType=INTEGER},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lenovo.tripnote.webchat.entity.BProductCashflow" >
    update b_product_cashflow
    <set >
      <if test="type != null" >
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=REAL},
      </if>
      <if test="flowTime != null" >
        flow_time = #{flowTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flowUserId != null" >
        flow_user_id = #{flowUserId,jdbcType=INTEGER},
      </if>
      <if test="flowUserName != null" >
        flow_user_name = #{flowUserName,jdbcType=VARCHAR},
      </if>
      <if test="flowCode != null" >
        flow_code = #{flowCode,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="profitType != null" >
        profit_type = #{profitType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lenovo.tripnote.webchat.entity.BProductCashflow" >
    update b_product_cashflow
    set `type` = #{type,jdbcType=INTEGER},
      money = #{money,jdbcType=REAL},
      flow_time = #{flowTime,jdbcType=TIMESTAMP},
      flow_user_id = #{flowUserId,jdbcType=INTEGER},
      flow_user_name = #{flowUserName,jdbcType=VARCHAR},
      flow_code = #{flowCode,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=INTEGER},
      profit_type = #{profitType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>