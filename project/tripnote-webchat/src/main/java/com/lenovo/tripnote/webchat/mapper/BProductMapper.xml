<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.lenovo.tripnote.webchat.mapper.BProductMapper" >
  <resultMap id="BaseResultMap" type="com.lenovo.tripnote.webchat.entity.BProduct" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="use_start_date" property="useStartDate" jdbcType="DATE" />
    <result column="use_end_date" property="useEndDate" jdbcType="DATE" />
    <result column="price_type" property="priceType" jdbcType="INTEGER" />
    <result column="product_count" property="productCount" jdbcType="INTEGER" />
    <result column="discount_price" property="discountPrice" jdbcType="REAL" />
    <result column="raw_price" property="rawPrice" jdbcType="REAL" />
    <result column="limit_time" property="limitTime" jdbcType="INTEGER" />
    <result column="commission" property="commission" jdbcType="REAL" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="image_url" property="imageUrl" jdbcType="VARCHAR" />
    <result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_update_time" property="lastUpdateTime" jdbcType="TIMESTAMP" />
    <result column="cost_description" property="costDescription" jdbcType="VARCHAR" />
    <result column="reservation_note" property="reservationNote" jdbcType="VARCHAR" />
    <result column="introduction" property="introduction" jdbcType="LONGVARCHAR" />
    <result column="guide" property="guide" jdbcType="LONGVARCHAR" />
  </resultMap>
  
  <resultMap id="SearchResultMap" type="com.lenovo.tripnote.webchat.entity.vo.BProductResultVo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="use_start_date" property="useStartDate" jdbcType="DATE" />
    <result column="use_end_date" property="useEndDate" jdbcType="DATE" />
    <result column="price_type" property="priceType" jdbcType="INTEGER" />
    <result column="product_count" property="productCount" jdbcType="INTEGER" />
    <result column="discount_price" property="discountPrice" jdbcType="REAL" />
    <result column="raw_price" property="rawPrice" jdbcType="REAL" />
    <result column="limit_time" property="limitTime" jdbcType="INTEGER" />
    <result column="commission" property="commission" jdbcType="REAL" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="image_url" property="imageUrl" jdbcType="VARCHAR" />
    <result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_update_time" property="lastUpdateTime" jdbcType="TIMESTAMP" />
    <result column="introduction" property="introduction" jdbcType="LONGVARCHAR" />
    <result column="soldCount" property="soldCount" jdbcType="INTEGER" />
    <result column="collageCount" property="collageCount" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="DetailResultMap" type="com.lenovo.tripnote.webchat.entity.vo.BProductDetailVo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="use_start_date" property="useStartDate" jdbcType="DATE" />
    <result column="use_end_date" property="useEndDate" jdbcType="DATE" />
    <result column="price_type" property="priceType" jdbcType="INTEGER" />
    <result column="product_count" property="productCount" jdbcType="INTEGER" />
    <result column="discount_price" property="discountPrice" jdbcType="REAL" />
    <result column="raw_price" property="rawPrice" jdbcType="REAL" />
    <result column="limit_time" property="limitTime" jdbcType="INTEGER" />
    <result column="commission" property="commission" jdbcType="REAL" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="image_url" property="imageUrl" jdbcType="VARCHAR" />
    <result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_update_time" property="lastUpdateTime" jdbcType="TIMESTAMP" />
    <result column="introduction" property="introduction" jdbcType="LONGVARCHAR" />
    <result column="collectionCount" property="collectionCount" jdbcType="INTEGER" />
    <result column="cost_description" property="costDescription" jdbcType="VARCHAR" />
    <result column="reservation_note" property="reservationNote" jdbcType="VARCHAR" />
    <result column="guide" property="guide" jdbcType="LONGVARCHAR" />
    <result column="soldCount" property="soldCount" jdbcType="INTEGER" />
    <result column="collageCount" property="collageCount" jdbcType="INTEGER" />
    <collection property="imageUrls" javaType="java.util.List" ofType="com.lenovo.tripnote.webchat.entity.BProductImage">  
            <result column="bproduct_imageid" property="id" jdbcType="INTEGER" />
            <result column="bproduct_image_url" property="url" jdbcType="VARCHAR" />
            <result column="product_id" property="productId" jdbcType="VARCHAR" />  
     </collection>
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, `name`, use_start_date, use_end_date, price_type, product_count, discount_price, raw_price, limit_time,
    commission, `status`, image_url, create_user_name, create_user_id, create_time, last_update_time, 
    cost_description, reservation_note
  </sql>
  <sql id="Blob_Column_List" >
    introduction, guide
  </sql>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
   
  <select id="searchProduct" resultMap="SearchResultMap" parameterType="com.lenovo.tripnote.webchat.entity.vo.BProductSearchVo" >
    select case price_type when 2 then (select count(1) from b_product_order_collage bpoc where bpoc.product_id=bp.id and bpoc.pay_status = 1) else (select count(1) from b_product_order bpo where bpo.product_id=bp.id and bpo.status=1) end as soldCount,
    case price_type when 2 then (select count(1) from b_product_order_collage bpoc where bpoc.product_id=bp.id and bpoc.collage_id=0 ) else null end as collageCount,
    <include refid="Base_Column_List" />
    from b_product bp where 1=1
    <if test="record.userId != null" >
        and create_user_id = #{record.userId,jdbcType=INTEGER}
    </if>
    <if test="record.status != null" >
        and status = #{record.status,jdbcType=INTEGER}
     </if>
     <if test="record.name != null" >
        and name like #{record.name,jdbcType=VARCHAR}
     </if>
      <if test="record.priceType != null" >
        and price_type = #{record.priceType,jdbcType=INTEGER}
     </if>
     order by bp.create_time desc
 </select>
  
  <select id="detail" resultMap="DetailResultMap" parameterType="java.lang.Integer" >
    select 
    bp.id, bp.`name`, bp.use_start_date, bp.use_end_date, bp.price_type, bp.product_count, bp.discount_price, bp.raw_price, bp.limit_time, bp.guide,bp.cost_description,bp.reservation_note,
    bp.commission, bp.`status`, bp.image_url, bp.create_user_name, bp.create_user_id,bp.create_time,bp.last_update_time,bp.introduction,
    bpi.id as bproduct_imageid,bpi.url as bproduct_image_url,bpi.product_id,
    case price_type when 2 then (select count(1) from b_product_order_collage bpoc where bpoc.product_id=bp.id and bpoc.pay_status = 1) else (select count(1) from b_product_order bpo where bpo.product_id=bp.id and bpo.status=1) end as soldCount,
    (select count(1) from b_product_collection bpc where bpc.collection_product_id = bp.id) as collectionCount
    from b_product bp
    left join b_product_image bpi on bpi.product_id=bp.id
    where bp.id = #{id,jdbcType=INTEGER} 
  </select>
  
  
  <select id="selectByExampleWithBLOBs" resultMap="BaseResultMap" parameterType="com.lenovo.tripnote.webchat.entity.BProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from b_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lenovo.tripnote.webchat.entity.BProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithBLOBsAndPage" resultMap="BaseResultMap" parameterType="com.lenovo.tripnote.webchat.entity.BProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from b_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="com.lenovo.tripnote.webchat.entity.BProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.lenovo.tripnote.webchat.entity.BProductExample" >
    delete from b_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.lenovo.tripnote.webchat.entity.BProductExample" resultType="java.lang.Integer" >
    select count(*) from b_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update b_product
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.useStartDate != null" >
        use_start_date = #{record.useStartDate,jdbcType=DATE},
      </if>
      <if test="record.useEndDate != null" >
        use_end_date = #{record.useEndDate,jdbcType=DATE},
      </if>
      <if test="record.priceType != null" >
        price_type = #{record.priceType,jdbcType=INTEGER},
      </if>
      <if test="record.productCount != null" >
        product_count = #{record.productCount,jdbcType=INTEGER},
      </if>
      <if test="record.discountPrice != null" >
        discount_price = #{record.discountPrice,jdbcType=REAL},
      </if>
      <if test="record.rawPrice != null" >
        raw_price = #{record.rawPrice,jdbcType=REAL},
      </if>
      <if test="record.limitTime != null" >
        limit_time = #{record.limitTime,jdbcType=INTEGER},
      </if>
      <if test="record.commission != null" >
        commission = #{record.commission,jdbcType=REAL},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.imageUrl != null" >
        image_url = #{record.imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserName != null" >
        create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastUpdateTime != null" >
        last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.costDescription != null" >
        cost_description = #{record.costDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.reservationNote != null" >
        reservation_note = #{record.reservationNote,jdbcType=VARCHAR},
      </if>
      <if test="record.introduction != null" >
        introduction = #{record.introduction,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.guide != null" >
        guide = #{record.guide,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update b_product
    set id = #{record.id,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      use_start_date = #{record.useStartDate,jdbcType=DATE},
      use_end_date = #{record.useEndDate,jdbcType=DATE},
      price_type = #{record.priceType,jdbcType=INTEGER},
      product_count = #{record.productCount,jdbcType=INTEGER},
      discount_price = #{record.discountPrice,jdbcType=REAL},
      raw_price = #{record.rawPrice,jdbcType=REAL},
      limit_time = #{record.limitTime,jdbcType=INTEGER},
      commission = #{record.commission,jdbcType=REAL},
      `status` = #{record.status,jdbcType=INTEGER},
      image_url = #{record.imageUrl,jdbcType=VARCHAR},
      create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      cost_description = #{record.costDescription,jdbcType=VARCHAR},
      reservation_note = #{record.reservationNote,jdbcType=VARCHAR},
      introduction = #{record.introduction,jdbcType=LONGVARCHAR},
      guide = #{record.guide,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update b_product
    set id = #{record.id,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      use_start_date = #{record.useStartDate,jdbcType=DATE},
      use_end_date = #{record.useEndDate,jdbcType=DATE},
      price_type = #{record.priceType,jdbcType=INTEGER},
      product_count = #{record.productCount,jdbcType=INTEGER},
      discount_price = #{record.discountPrice,jdbcType=REAL},
      raw_price = #{record.rawPrice,jdbcType=REAL},
      limit_time = #{record.limitTime,jdbcType=INTEGER},
      commission = #{record.commission,jdbcType=REAL},
      `status` = #{record.status,jdbcType=INTEGER},
      image_url = #{record.imageUrl,jdbcType=VARCHAR},
      create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      cost_description = #{record.costDescription,jdbcType=VARCHAR},
      reservation_note = #{record.reservationNote,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from b_product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from b_product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lenovo.tripnote.webchat.entity.BProduct" useGeneratedKeys="true" keyProperty="id" >
    insert into b_product (`name`, use_start_date, use_end_date, price_type,
      product_count, discount_price, raw_price, 
      limit_time, commission, `status`, 
      image_url, create_user_name, create_user_id, 
      create_time, last_update_time, cost_description, 
      reservation_note, introduction, guide
      )
    values (#{name,jdbcType=VARCHAR}, #{useStartDate,jdbcType=DATE}, #{useEndDate,jdbcType=DATE}, #{priceType,jdbcType=INTEGER},
      #{productCount,jdbcType=INTEGER}, #{discountPrice,jdbcType=REAL}, #{rawPrice,jdbcType=REAL}, 
      #{limitTime,jdbcType=INTEGER}, #{commission,jdbcType=REAL}, #{status,jdbcType=INTEGER}, 
      #{imageUrl,jdbcType=VARCHAR}, #{createUserName,jdbcType=VARCHAR}, #{createUserId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastUpdateTime,jdbcType=TIMESTAMP}, #{costDescription,jdbcType=VARCHAR}, 
      #{reservationNote,jdbcType=VARCHAR}, #{introduction,jdbcType=LONGVARCHAR}, #{guide,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lenovo.tripnote.webchat.entity.BProduct" useGeneratedKeys="true" keyProperty="id" >
    insert into b_product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      `name`,
      use_start_date,
      use_end_date,
      price_type,
      product_count,
      discount_price,
      raw_price,
      limit_time,
      commission,
      `status`,
      image_url,
      create_user_name,
      create_user_id,
      create_time,
      last_update_time,
      cost_description,
      reservation_note,
      introduction,
      guide,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{name,jdbcType=VARCHAR},
      #{useStartDate,jdbcType=DATE},
      #{useEndDate,jdbcType=DATE},
      #{priceType,jdbcType=INTEGER},
      #{productCount,jdbcType=INTEGER},
      #{discountPrice,jdbcType=REAL},
      #{rawPrice,jdbcType=REAL},
      #{limitTime,jdbcType=INTEGER},
      #{commission,jdbcType=REAL},
      #{status,jdbcType=INTEGER},
      #{imageUrl,jdbcType=VARCHAR},
      #{createUserName,jdbcType=VARCHAR},
      #{createUserId,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP},
      #{lastUpdateTime,jdbcType=TIMESTAMP},
      #{costDescription,jdbcType=VARCHAR},
      #{reservationNote,jdbcType=VARCHAR},
      #{introduction,jdbcType=LONGVARCHAR},
      #{guide,jdbcType=LONGVARCHAR},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lenovo.tripnote.webchat.entity.BProduct" >
    update b_product
    <set >
      <if test="name != null" >
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="useStartDate != null" >
        use_start_date = #{useStartDate,jdbcType=DATE},
      </if>
      <if test="useEndDate != null" >
        use_end_date = #{useEndDate,jdbcType=DATE},
      </if>
      <if test="priceType != null" >
        price_type = #{priceType,jdbcType=INTEGER},
      </if>
      <if test="productCount != null" >
        product_count = #{productCount,jdbcType=INTEGER},
      </if>
      <if test="discountPrice != null" >
        discount_price = #{discountPrice,jdbcType=REAL},
      </if>
      <if test="rawPrice != null" >
        raw_price = #{rawPrice,jdbcType=REAL},
      </if>
      <if test="limitTime != null" >
        limit_time = #{limitTime,jdbcType=INTEGER},
      </if>
      <if test="commission != null" >
        commission = #{commission,jdbcType=REAL},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="imageUrl != null" >
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="createUserName != null" >
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null" >
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="costDescription != null" >
        cost_description = #{costDescription,jdbcType=VARCHAR},
      </if>
      <if test="reservationNote != null" >
        reservation_note = #{reservationNote,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null" >
        introduction = #{introduction,jdbcType=LONGVARCHAR},
      </if>
      <if test="guide != null" >
        guide = #{guide,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lenovo.tripnote.webchat.entity.BProduct" >
    update b_product
    set `name` = #{name,jdbcType=VARCHAR},
      use_start_date = #{useStartDate,jdbcType=DATE},
      use_end_date = #{useEndDate,jdbcType=DATE},
      price_type = #{priceType,jdbcType=INTEGER},
      product_count = #{productCount,jdbcType=INTEGER},
      discount_price = #{discountPrice,jdbcType=REAL},
      raw_price = #{rawPrice,jdbcType=REAL},
      limit_time = #{limitTime,jdbcType=INTEGER},
      commission = #{commission,jdbcType=REAL},
      `status` = #{status,jdbcType=INTEGER},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      cost_description = #{costDescription,jdbcType=VARCHAR},
      reservation_note = #{reservationNote,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=LONGVARCHAR},
      guide = #{guide,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lenovo.tripnote.webchat.entity.BProduct" >
    update b_product
    set `name` = #{name,jdbcType=VARCHAR},
      use_start_date = #{useStartDate,jdbcType=DATE},
      use_end_date = #{useEndDate,jdbcType=DATE},
      price_type = #{priceType,jdbcType=INTEGER},
      product_count = #{productCount,jdbcType=INTEGER},
      discount_price = #{discountPrice,jdbcType=REAL},
      raw_price = #{rawPrice,jdbcType=REAL},
      limit_time = #{limitTime,jdbcType=INTEGER},
      commission = #{commission,jdbcType=REAL},
      `status` = #{status,jdbcType=INTEGER},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      cost_description = #{costDescription,jdbcType=VARCHAR},
      reservation_note = #{reservationNote,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>