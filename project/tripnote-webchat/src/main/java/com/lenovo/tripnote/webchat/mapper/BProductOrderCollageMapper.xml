<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.lenovo.tripnote.webchat.mapper.BProductOrderCollageMapper" >
  <resultMap id="BaseResultMap" type="com.lenovo.tripnote.webchat.entity.BProductOrderCollage" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="collage_user_id" property="collageUserId" jdbcType="INTEGER" />
    <result column="collage_user_name" property="collageUserName" jdbcType="VARCHAR" />
    <result column="product_collage_id" property="productCollageId" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="collage_status" property="collageStatus" jdbcType="INTEGER" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="collage_id" property="collageId" jdbcType="INTEGER" />
    <result column="order_user_name" property="orderUserName" jdbcType="VARCHAR" />
    <result column="order_user_phone" property="orderUserPhone" jdbcType="VARCHAR" />
    <result column="place" property="place" jdbcType="VARCHAR" />
    <result column="card_id" property="cardId" jdbcType="VARCHAR" />
    <result column="use_date" property="useDate" jdbcType="DATE" />
    <result column="other_info" property="otherInfo" jdbcType="VARCHAR" />
    <result column="deposit" property="deposit" jdbcType="REAL" />
  </resultMap>
  
   
  <resultMap id="DetailResultMap" type="com.lenovo.tripnote.webchat.entity.vo.BProductOrderCollageDetailVo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="collage_user_id" property="collageUserId" jdbcType="INTEGER" />
    <result column="collage_user_name" property="collageUserName" jdbcType="VARCHAR" />
    <result column="product_collage_id" property="productCollageId" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="collage_status" property="collageStatus" jdbcType="INTEGER" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="collage_id" property="collageId" jdbcType="INTEGER" />
    <result column="people_num" property="peopleNum" jdbcType="INTEGER" />
    <result column="collage_price" property="collagePrice" jdbcType="REAL" />
    <result column="peoplecount" property="peoplecount" jdbcType="INTEGER" />
    <result column="remainingTime" property="remainingTime" jdbcType="INTEGER" />
    <result column="userImageUrl" property="userImageUrl" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, collage_user_id, collage_user_name, product_collage_id, product_id, collage_status, 
    create_user_id, create_user_name, create_time, collage_id, order_user_name, order_user_phone, 
    place, card_id, use_date, other_info, deposit
  </sql>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
   
   <select id="listUser" resultMap="DetailResultMap" parameterType="java.lang.Integer" >
     select bpc.people_num,bpc.collage_price,bpc.collage_limit_time,
     (bpc.collage_limit_time*3600 - TIMESTAMPDIFF(SECOND,bpoc.create_time,now())) as remainingTime,(select count(1) from  b_product_order_collage bp where bp.collage_id =bpoc.id or (bp.id=bpoc.id and bp.collage_id=0)) as peoplecount,
     bpoc.create_user_id,bpoc.create_user_name,bpoc.collage_status,bpoc.product_collage_id,bpoc.product_id,bpoc.id,bpoc.create_time,bpoc.collage_id,bpoc.collage_user_id,bpoc.collage_user_name,
     ba.imageurl as userImageUrl
     from b_product_order_collage bpoc left join b_product_collage bpc on bpc.id=bpoc.product_collage_id
     left join b_account ba on ba.id = bpoc.collage_user_id
     where (bpoc.id = #{id,jdbcType=INTEGER}  or bpoc.collage_id=#{id,jdbcType=INTEGER}) order by bpoc.create_time desc
  </select>
  
  
  <select id="listCollage" resultMap="DetailResultMap" parameterType="java.lang.Integer" >
     select bpc.people_num,bpc.collage_price,bpc.collage_limit_time,
     (bpc.collage_limit_time*3600 - TIMESTAMPDIFF(SECOND,bpoc.create_time,now())) as remainingTime,(select count(1) from  b_product_order_collage bp where bp.collage_id =bpoc.id or (bp.id=bpoc.id and bp.collage_id=0)) as peoplecount,
     bpoc.create_user_id,bpoc.create_user_name,bpoc.collage_status,bpoc.product_collage_id,bpoc.product_id,bpoc.id,bpoc.create_time,bpoc.collage_id,bpoc.collage_user_id,bpoc.collage_user_name,
     ba.imageurl as userImageUrl
     from b_product_order_collage bpoc left join b_product_collage bpc on bpc.id=bpoc.product_collage_id  
     left join b_account ba on ba.id = bpoc.collage_user_id where  bpoc.collage_id = 0
     and  bpoc.product_id = #{id,jdbcType=INTEGER} order by bpoc.create_time desc
  </select>
  
  
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lenovo.tripnote.webchat.entity.BProductOrderCollageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_product_order_collage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="com.lenovo.tripnote.webchat.entity.BProductOrderCollageExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_product_order_collage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.lenovo.tripnote.webchat.entity.BProductOrderCollageExample" >
    delete from b_product_order_collage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.lenovo.tripnote.webchat.entity.BProductOrderCollageExample" resultType="java.lang.Integer" >
    select count(*) from b_product_order_collage
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update b_product_order_collage
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.collageUserId != null" >
        collage_user_id = #{record.collageUserId,jdbcType=INTEGER},
      </if>
      <if test="record.collageUserName != null" >
        collage_user_name = #{record.collageUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.productCollageId != null" >
        product_collage_id = #{record.productCollageId,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.collageStatus != null" >
        collage_status = #{record.collageStatus,jdbcType=INTEGER},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createUserName != null" >
        create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.collageId != null" >
        collage_id = #{record.collageId,jdbcType=INTEGER},
      </if>
      <if test="record.orderUserName != null" >
        order_user_name = #{record.orderUserName,jdbcType=VARCHAR},
      </if>
      <if test="record.orderUserPhone != null" >
        order_user_phone = #{record.orderUserPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.place != null" >
        place = #{record.place,jdbcType=VARCHAR},
      </if>
      <if test="record.cardId != null" >
        card_id = #{record.cardId,jdbcType=VARCHAR},
      </if>
      <if test="record.useDate != null" >
        use_date = #{record.useDate,jdbcType=DATE},
      </if>
      <if test="record.otherInfo != null" >
        other_info = #{record.otherInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.deposit != null" >
        deposit = #{record.deposit,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update b_product_order_collage
    set id = #{record.id,jdbcType=INTEGER},
      collage_user_id = #{record.collageUserId,jdbcType=INTEGER},
      collage_user_name = #{record.collageUserName,jdbcType=VARCHAR},
      product_collage_id = #{record.productCollageId,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      collage_status = #{record.collageStatus,jdbcType=INTEGER},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_user_name = #{record.createUserName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      collage_id = #{record.collageId,jdbcType=INTEGER},
      order_user_name = #{record.orderUserName,jdbcType=VARCHAR},
      order_user_phone = #{record.orderUserPhone,jdbcType=VARCHAR},
      place = #{record.place,jdbcType=VARCHAR},
      card_id = #{record.cardId,jdbcType=VARCHAR},
      use_date = #{record.useDate,jdbcType=DATE},
      other_info = #{record.otherInfo,jdbcType=VARCHAR},
      deposit = #{record.deposit,jdbcType=REAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from b_product_order_collage
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from b_product_order_collage
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lenovo.tripnote.webchat.entity.BProductOrderCollage" useGeneratedKeys="true" keyProperty="id" >
    insert into b_product_order_collage (collage_user_id, collage_user_name, product_collage_id, 
      product_id, collage_status, create_user_id, 
      create_user_name, create_time, collage_id, 
      order_user_name, order_user_phone, place, 
      card_id, use_date, other_info, 
      deposit)
    values (#{collageUserId,jdbcType=INTEGER}, #{collageUserName,jdbcType=VARCHAR}, #{productCollageId,jdbcType=INTEGER}, 
      #{productId,jdbcType=INTEGER}, #{collageStatus,jdbcType=INTEGER}, #{createUserId,jdbcType=INTEGER}, 
      #{createUserName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{collageId,jdbcType=INTEGER}, 
      #{orderUserName,jdbcType=VARCHAR}, #{orderUserPhone,jdbcType=VARCHAR}, #{place,jdbcType=VARCHAR}, 
      #{cardId,jdbcType=VARCHAR}, #{useDate,jdbcType=DATE}, #{otherInfo,jdbcType=VARCHAR}, 
      #{deposit,jdbcType=REAL})
  </insert>
  <insert id="insertSelective" parameterType="com.lenovo.tripnote.webchat.entity.BProductOrderCollage" useGeneratedKeys="true" keyProperty="id" >
    insert into b_product_order_collage
    <trim prefix="(" suffix=")" suffixOverrides="," >
      collage_user_id,
      collage_user_name,
      product_collage_id,
      product_id,
      collage_status,
      create_user_id,
      create_user_name,
      create_time,
      collage_id,
      order_user_name,
      order_user_phone,
      place,
      card_id,
      use_date,
      other_info,
      deposit,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{collageUserId,jdbcType=INTEGER},
      #{collageUserName,jdbcType=VARCHAR},
      #{productCollageId,jdbcType=INTEGER},
      #{productId,jdbcType=INTEGER},
      #{collageStatus,jdbcType=INTEGER},
      #{createUserId,jdbcType=INTEGER},
      #{createUserName,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP},
      #{collageId,jdbcType=INTEGER},
      #{orderUserName,jdbcType=VARCHAR},
      #{orderUserPhone,jdbcType=VARCHAR},
      #{place,jdbcType=VARCHAR},
      #{cardId,jdbcType=VARCHAR},
      #{useDate,jdbcType=DATE},
      #{otherInfo,jdbcType=VARCHAR},
      #{deposit,jdbcType=REAL},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lenovo.tripnote.webchat.entity.BProductOrderCollage" >
    update b_product_order_collage
    <set >
      <if test="collageUserId != null" >
        collage_user_id = #{collageUserId,jdbcType=INTEGER},
      </if>
      <if test="collageUserName != null" >
        collage_user_name = #{collageUserName,jdbcType=VARCHAR},
      </if>
      <if test="productCollageId != null" >
        product_collage_id = #{productCollageId,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="collageStatus != null" >
        collage_status = #{collageStatus,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createUserName != null" >
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="collageId != null" >
        collage_id = #{collageId,jdbcType=INTEGER},
      </if>
      <if test="orderUserName != null" >
        order_user_name = #{orderUserName,jdbcType=VARCHAR},
      </if>
      <if test="orderUserPhone != null" >
        order_user_phone = #{orderUserPhone,jdbcType=VARCHAR},
      </if>
      <if test="place != null" >
        place = #{place,jdbcType=VARCHAR},
      </if>
      <if test="cardId != null" >
        card_id = #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="useDate != null" >
        use_date = #{useDate,jdbcType=DATE},
      </if>
      <if test="otherInfo != null" >
        other_info = #{otherInfo,jdbcType=VARCHAR},
      </if>
      <if test="deposit != null" >
        deposit = #{deposit,jdbcType=REAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lenovo.tripnote.webchat.entity.BProductOrderCollage" >
    update b_product_order_collage
    set collage_user_id = #{collageUserId,jdbcType=INTEGER},
      collage_user_name = #{collageUserName,jdbcType=VARCHAR},
      product_collage_id = #{productCollageId,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      collage_status = #{collageStatus,jdbcType=INTEGER},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      collage_id = #{collageId,jdbcType=INTEGER},
      order_user_name = #{orderUserName,jdbcType=VARCHAR},
      order_user_phone = #{orderUserPhone,jdbcType=VARCHAR},
      place = #{place,jdbcType=VARCHAR},
      card_id = #{cardId,jdbcType=VARCHAR},
      use_date = #{useDate,jdbcType=DATE},
      other_info = #{otherInfo,jdbcType=VARCHAR},
      deposit = #{deposit,jdbcType=REAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>