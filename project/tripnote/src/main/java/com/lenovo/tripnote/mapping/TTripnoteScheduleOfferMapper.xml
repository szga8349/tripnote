<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.lenovo.tripnote.dao.TTripnoteScheduleOfferMapper" >
  <resultMap id="BaseResultMap" type="com.lenovo.tripnote.entity.TTripnoteScheduleOffer" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name_cn" property="nameCn" jdbcType="VARCHAR" />
    <result column="name_en" property="nameEn" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="supplier" property="supplier" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="tripnote_id" property="tripnoteId" jdbcType="INTEGER" />
    <result column="indexdate" property="indexdate" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="SearchResultMap" type="com.lenovo.tripnote.entity.vo.TTripnoteScheduleOfferResultVo" >
     <id column="tripnote_id" property="tripnoteId" jdbcType="INTEGER" />
     <result column="tripnote_price" property="price" jdbcType="DOUBLE" />
     <collection property="scheduleOffers" javaType="java.util.List" ofType="com.lenovo.tripnote.entity.vo.TTripnoteScheduleOfferVo">  
            <id column="id" property="id" jdbcType="INTEGER" />
            <result column="name_cn" property="nameCn" jdbcType="VARCHAR" />
            <result column="name_en" property="nameEn" jdbcType="VARCHAR" />
            <result column="num" property="num" jdbcType="INTEGER" />
            <result column="price" property="price" jdbcType="DOUBLE" />
            <result column="supplier" property="supplier" jdbcType="VARCHAR" />
            <result column="type" property="type" jdbcType="INTEGER" />
            <result column="tripnote_id" property="tripnoteId" jdbcType="INTEGER" />
            <result column="indexdate" property="indexdate" jdbcType="INTEGER" />
     </collection>  
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, name_cn, name_en, num, price, supplier, create_time, create_user_id, `type`, 
    tripnote_id, indexdate
  </sql>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lenovo.tripnote.entity.TTripnoteScheduleOfferExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_tripnote_schedule_offer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="com.lenovo.tripnote.entity.TTripnoteScheduleOfferExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_tripnote_schedule_offer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="search" resultMap="SearchResultMap" parameterType="com.lenovo.tripnote.entity.vo.TTripnoteScheduleOfferSearchVo" >
    select
    ttso.id, ttso.name_cn, ttso.name_en, ttso.num, ttso.price, ttso.supplier,ttso.`type`, 
    ttso.tripnote_id, ttso.indexdate,ttn.price as tripnote_price
    from t_tripnote_schedule_offer ttso left join t_trip_note ttn on ttso.tripnote_id=ttn.id where 1=1
    <if test="record.createUserId != null" >
          and ttso.create_user_id = #{record.createUserId,jdbcType=INTEGER}
    </if>
      <if test="record.tripnoteId != null" >
          and ttso.tripnote_id = #{record.tripnoteId,jdbcType=INTEGER}
    </if>
    <if test="record.orderby != null" >
      order by ${record.orderByClause}
    </if>
  </select>
  
  <delete id="deleteByExample" parameterType="com.lenovo.tripnote.entity.TTripnoteScheduleOfferExample" >
    delete from t_tripnote_schedule_offer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.lenovo.tripnote.entity.TTripnoteScheduleOfferExample" resultType="java.lang.Integer" >
    select count(*) from t_tripnote_schedule_offer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_tripnote_schedule_offer
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.nameCn != null" >
        name_cn = #{record.nameCn,jdbcType=VARCHAR},
      </if>
      <if test="record.nameEn != null" >
        name_en = #{record.nameEn,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null" >
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.supplier != null" >
        supplier = #{record.supplier,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        `type` = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.tripnoteId != null" >
        tripnote_id = #{record.tripnoteId,jdbcType=INTEGER},
      </if>
      <if test="record.indexdate != null" >
        indexdate = #{record.indexdate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_tripnote_schedule_offer
    set id = #{record.id,jdbcType=INTEGER},
      name_cn = #{record.nameCn,jdbcType=VARCHAR},
      name_en = #{record.nameEn,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DOUBLE},
      supplier = #{record.supplier,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      `type` = #{record.type,jdbcType=INTEGER},
      tripnote_id = #{record.tripnoteId,jdbcType=INTEGER},
      indexdate = #{record.indexdate,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_tripnote_schedule_offer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_tripnote_schedule_offer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lenovo.tripnote.entity.TTripnoteScheduleOffer" useGeneratedKeys="true" keyProperty="id">
    insert into t_tripnote_schedule_offer (id, name_cn, name_en, 
      num, price, supplier, 
      create_time, create_user_id, `type`, 
      tripnote_id, indexdate)
    values (#{id,jdbcType=INTEGER}, #{nameCn,jdbcType=VARCHAR}, #{nameEn,jdbcType=VARCHAR}, 
      #{num,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE}, #{supplier,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{tripnoteId,jdbcType=INTEGER}, #{indexdate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lenovo.tripnote.entity.TTripnoteScheduleOffer" useGeneratedKeys="true" keyProperty="id">
    insert into t_tripnote_schedule_offer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      name_cn,
      name_en,
      num,
      price,
      supplier,
      create_time,
      create_user_id,
      `type`,
      tripnote_id,
      indexdate,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=INTEGER},
      #{nameCn,jdbcType=VARCHAR},
      #{nameEn,jdbcType=VARCHAR},
      #{num,jdbcType=INTEGER},
      #{price,jdbcType=DOUBLE},
      #{supplier,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP},
      #{createUserId,jdbcType=INTEGER},
      #{type,jdbcType=INTEGER},
      #{tripnoteId,jdbcType=INTEGER},
      #{indexdate,jdbcType=INTEGER},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lenovo.tripnote.entity.TTripnoteScheduleOffer" >
    update t_tripnote_schedule_offer
    <set >
      <if test="nameCn != null" >
        name_cn = #{nameCn,jdbcType=VARCHAR},
      </if>
      <if test="nameEn != null" >
        name_en = #{nameEn,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="supplier != null" >
        supplier = #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="tripnoteId != null" >
        tripnote_id = #{tripnoteId,jdbcType=INTEGER},
      </if>
      <if test="indexdate != null" >
        indexdate = #{indexdate,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lenovo.tripnote.entity.TTripnoteScheduleOffer" >
    update t_tripnote_schedule_offer
    set name_cn = #{nameCn,jdbcType=VARCHAR},
      name_en = #{nameEn,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      supplier = #{supplier,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      `type` = #{type,jdbcType=INTEGER},
      tripnote_id = #{tripnoteId,jdbcType=INTEGER},
      indexdate = #{indexdate,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>