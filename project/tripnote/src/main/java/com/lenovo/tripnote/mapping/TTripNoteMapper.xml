<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.lenovo.tripnote.dao.TTripNoteMapper" >
  <resultMap id="BaseResultMap" type="com.lenovo.tripnote.entity.TTripNote" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="start_date" property="startDate" jdbcType="DATE" />
    <result column="end_date" property="endDate" jdbcType="DATE" />
    <result column="days" property="days" jdbcType="INTEGER" />
    <result column="destination" property="destination" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="start_city" property="startCity" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="introduction" property="introduction" jdbcType="LONGVARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  
  
   <resultMap id="SearchResultMap" type="com.lenovo.tripnote.entity.vo.TTripNoteSearchResultVo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="start_date" property="startDate" jdbcType="DATE" />
    <result column="end_date" property="endDate" jdbcType="DATE" />
    <result column="days" property="days" jdbcType="INTEGER" />
    <result column="destination" property="destination" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="start_city" property="startCity" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="introduction" property="introduction" jdbcType="LONGVARCHAR" />
    <collection property="custems" javaType="java.util.List" ofType="com.lenovo.tripnote.entity.vo.TCustemVo">  
            <result column="phone1" property="phone" jdbcType="VARCHAR" />  
            <result column="name" property="name" jdbcType="VARCHAR" />  
     </collection>  
      <collection property="tTripNoteSchedules" javaType="java.util.List" ofType="com.lenovo.tripnote.entity.vo.SampleScheduleResultVo">
            <result column="schedule_title" property="title" jdbcType="VARCHAR" />  
     </collection> 
  </resultMap>
  
   <resultMap id="DetailResultMap" type="com.lenovo.tripnote.entity.vo.TTripNoteDetailResultVo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="start_date" property="startDate" jdbcType="DATE" />
    <result column="end_date" property="endDate" jdbcType="DATE" />
    <result column="days" property="days" jdbcType="INTEGER" />
    <result column="destination" property="destination" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="start_city" property="startCity" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="introduction" property="introduction" jdbcType="LONGVARCHAR" />
    <collection property="custems" javaType="java.util.List" ofType="com.lenovo.tripnote.entity.vo.TCustemVo">  
            <result column="phone1" property="phone" jdbcType="VARCHAR" />  
            <result column="name" property="name" jdbcType="VARCHAR" />  
     </collection>  
     <collection property="tTripNoteSchedules" javaType="java.util.List" ofType="com.lenovo.tripnote.entity.vo.TTripNoteScheduleResultVo">
            <result column="id" property="tripnoteId" jdbcType="INTEGER" />
            <result column="schedule_id" property="id" jdbcType="INTEGER" />
            <result column="schedule_title" property="title" jdbcType="VARCHAR" />  
            <result column="indexdate" property="indexdate" jdbcType="INTEGER" />
            <collection property="citys" javaType="java.util.List" ofType="com.lenovo.tripnote.entity.vo.TTripnoteScheduleRCityVo">
                   <result column="rcity_id" property="id" jdbcType="INTEGER" />
                   <result column="city_id" property="cityId" jdbcType="INTEGER" />
                   <result column="country_id" property="countryId" jdbcType="INTEGER" />
                   <result column="rcity_schedule_id" property="scheduleId" jdbcType="INTEGER" />
                   <result column="name_cn" property="nameCn" jdbcType="VARCHAR" />    
                   <result column="name_en" property="nameEn" jdbcType="VARCHAR" />
                   <result column="lat" property="lat" jdbcType="DOUBLE" />
                   <result column="lon" property="lon" jdbcType="DOUBLE" />
             </collection> 
     </collection> 
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, code, title, start_date, end_date, `days`, destination, create_time, create_user_id, 
    `status`, start_city, remarks,introduction,type,publish_time
  </sql>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="queryCondition" resultMap="DetailResultMap" parameterType="com.lenovo.tripnote.entity.vo.TTripNoteSearchVo" >
    select
    t.id,t.code, t.title,t.start_date, t.end_date, t.`days`, t.destination, 
    t.`status`, t.start_city, t.remarks,tc.name,tc.phone1,t.introduction,
    tts.id as schedule_id, tts.title as schedule_title,tts.indexdate,
    bc.id as city_id,bc.name_cn,bc.name_en,bc.lat,bc.lon,ttsrc.schedule_id as rcity_schedule_id,bc.country_id,ttsrc.id as rcity_id
    from (select 
     <include refid="Base_Column_List" />
     from t_trip_note t where  type = #{record.type,jdbcType=INTEGER} and create_user_id = #{record.userId,jdbcType=INTEGER}
     <if test="record.title != null" >
        and t.title like #{record.title,jdbcType=VARCHAR}
     </if>
     <choose>
         <when test="record.sortField != null">
         order by t.${record.sortField}  
         <choose>  
             <when test="record.ascOrDes==1">asc</when>  
             <when test="record.ascOrDes!=1">desc</when>  
          </choose>
          </when>
          <when test="record.sortField == null">
              order by t.create_time desc
          </when>
    </choose>
    limit #{record.pageNo,jdbcType=INTEGER},#{record.pageSize,jdbcType=INTEGER}) as t 
    left join t_tripnote_r_customer ts on t.id = ts.tripnote_id 
    left join t_customer tc on tc.id = ts.customer_id 
    left join t_tripnote_schedule tts on tts.tripnote_id = t.id 
    left join t_tripnote_schedule_r_city ttsrc on ttsrc.schedule_id = tts.id
    left join b_city bc on ttsrc.city_id = bc.id 
     <choose>
         <when test="record.sortField != null">
         order by t.${record.sortField}
         <choose>  
             <when test="record.ascOrDes==1">asc</when>  
             <when test="record.ascOrDes!=1">desc</when>  
          </choose>
          </when>
          <when test="record.sortField == null">
              order by t.create_time desc
          </when>
    </choose>
    ,tts.indexdate asc,ttsrc.create_time asc
  </select>
  
   <select id="getDetailByKey" resultMap="DetailResultMap" parameterType="java.lang.Integer" >
    select
    t.id,t.code, t.title,t.start_date, t.end_date, t.`days`, t.destination, 
    t.`status`, t.start_city, t.remarks,tc.name,tc.phone1,t.introduction,
    tts.id as schedule_id, tts.title as schedule_title,tts.indexdate,
    bc.id as city_id,bc.name_cn,bc.name_en,bc.lat,bc.lon,ttsrc.schedule_id as rcity_schedule_id,bc.country_id,ttsrc.id as rcity_id
    from t_trip_note t 
    left join t_tripnote_r_customer ts on t.id = ts.tripnote_id 
    left join t_customer tc on tc.id = ts.customer_id 
    left join t_tripnote_schedule tts on tts.tripnote_id = t.id 
    left join t_tripnote_schedule_r_city ttsrc on ttsrc.schedule_id = tts.id
    left join b_city bc on ttsrc.city_id = bc.id
    where t.id = #{id,jdbcType=INTEGER} order by tts.indexdate asc,ttsrc.create_time asc
  </select>
  <select id="queryConditionAndPage" resultMap="DetailResultMap" parameterType="com.lenovo.tripnote.entity.vo.TTripNoteSearchVo" >
    select
    t.id,t.code, t.title,t.start_date, t.end_date, t.`days`, t.destination, 
    t.`status`, t.start_city, t.remarks,tc.name,tc.phone1,t.introduction,
    tts.id as schedule_id, tts.title as schedule_title,tts.indexdate,
    bc.id as city_id,bc.name_cn,bc.name_en,bc.lat,bc.lon,ttsrc.schedule_id as rcity_schedule_id,bc.country_id,ttsrc.id as rcity_id 
    from (select *  from t_trip_note t1 where  t1.type = #{record.type,jdbcType=INTEGER} and create_user_id = #{record.userId,jdbcType=INTEGER}
     <if test="record.title != null" >
        and t1.title like #{record.title,jdbcType=VARCHAR}
     </if>
    order by t1.create_time desc limit #{record.pageNo,jdbcType=INTEGER},#{record.pageSize,jdbcType=INTEGER}) as t 
    left join t_tripnote_r_customer ts on t.id = ts.tripnote_id 
    left join t_customer tc on tc.id = ts.customer_id 
    left join t_tripnote_schedule tts on tts.tripnote_id = t.id 
    left join t_tripnote_schedule_r_city ttsrc on ttsrc.schedule_id = tts.id
    left join b_city bc on ttsrc.city_id = bc.id order by  t.create_time desc,tts.indexdate asc,ttsrc.create_time asc
  </select>
  
  <delete id="deleteByExample" parameterType="com.lenovo.tripnote.entity.TTripNoteExample" >
    delete from t_trip_note
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
 
  <delete id="deleteTraffic" parameterType="com.lenovo.tripnote.entity.TTripNote" >
    delete ttst from t_tripnote_schedule_traffic ttst left join  t_tripnote_schedule  tts on tts.id = ttst.schedule_id where tts.tripnote_id=#{record.id,jdbcType=INTEGER} and tts.create_userid = #{record.createUserId,jdbcType=INTEGER}
  </delete>
   <delete id="deleteScheduleRUsenote" parameterType="com.lenovo.tripnote.entity.TTripNote" >
    delete ttst from t_tripnote_schedule_r_usenote ttst left join t_tripnote_schedule  tts on tts.id = ttst.tripnote_schedule_id where tts.tripnote_id=#{record.id,jdbcType=INTEGER} and tts.create_userid = #{record.createUserId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteScheduleTrip" parameterType="com.lenovo.tripnote.entity.TTripNote" >
    delete ttst from t_tripnote_schedule_trip ttst left join t_tripnote_schedule  tts on tts.id = ttst.schedule_id where tts.tripnote_id=#{record.id,jdbcType=INTEGER} and tts.create_userid = #{record.createUserId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteScheduleRCity" parameterType="com.lenovo.tripnote.entity.TTripNote" >
    delete ttst from t_tripnote_schedule_r_city ttst left join t_tripnote_schedule  tts on tts.id = ttst.schedule_id where tts.tripnote_id=#{record.id,jdbcType=INTEGER} and tts.create_userid = #{record.createUserId,jdbcType=INTEGER}
  </delete>
  
  <select id="countByExample" parameterType="com.lenovo.tripnote.entity.TTripNoteExample" resultType="java.lang.Integer" >
    select count(*) from t_trip_note
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_trip_note
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null" >
        start_date = #{record.startDate,jdbcType=DATE},
      </if>
      <if test="record.endDate != null" >
        end_date = #{record.endDate,jdbcType=DATE},
      </if>
      <if test="record.days != null" >
        `days` = #{record.days,jdbcType=INTEGER},
      </if>
      <if test="record.destination != null" >
        destination = #{record.destination,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.startCity != null" >
        start_city = #{record.startCity,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
       <if test="record.introduction != null" >
        introduction = #{record.introduction,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.publishTime != null" >
        publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_trip_note
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=DATE},
      end_date = #{record.endDate,jdbcType=DATE},
      `days` = #{record.days,jdbcType=INTEGER},
      destination = #{record.destination,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=INTEGER},
      start_city = #{record.startCity,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      introduction = #{record.introduction,jdbcType=LONGVARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_trip_note
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_trip_note
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lenovo.tripnote.entity.TTripNote" useGeneratedKeys="true"  keyProperty="id">
    insert into t_trip_note (code, title, start_date, 
      end_date, `days`, destination, 
      create_time, create_user_id, `status`, 
      start_city, remarks, introduction,type,publish_time)
    values (#{code,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{startDate,jdbcType=DATE}, 
      #{endDate,jdbcType=DATE}, #{days,jdbcType=INTEGER}, #{destination,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{startCity,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR},#{introduction,jdbcType=LONGVARCHAR},#{type,jdbcType=INTEGER},#{publishTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.lenovo.tripnote.entity.TTripNote" useGeneratedKeys="true" keyProperty="id">
    insert into t_trip_note
    <trim prefix="(" suffix=")" suffixOverrides="," >
      code,
      title,
      start_date,
      end_date,
      `days`,
      destination,
      create_time,
      create_user_id,
      `status`,
      start_city,
      remarks,
      introduction,
      type,
      publish_time,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{code,jdbcType=VARCHAR},
      #{title,jdbcType=VARCHAR},
      #{startDate,jdbcType=DATE},
      #{endDate,jdbcType=DATE},
      #{days,jdbcType=INTEGER},
      #{destination,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP},
      #{createUserId,jdbcType=INTEGER},
      #{status,jdbcType=INTEGER},
      #{startCity,jdbcType=VARCHAR},
      #{remarks,jdbcType=VARCHAR},
      #{introduction,jdbcType=LONGVARCHAR},
      #{type,jdbcType=INTEGER},
      #{publishTime,jdbcType=TIMESTAMP},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lenovo.tripnote.entity.TTripNote" >
    update t_trip_note
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="days != null" >
        `days` = #{days,jdbcType=INTEGER},
      </if>
      <if test="destination != null" >
        destination = #{destination,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="startCity != null" >
        start_city = #{startCity,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
       <if test="introduction != null" >
        introduction = #{introduction,jdbcType=LONGVARCHAR},
      </if>
       <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="publishTime != null" >
         publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lenovo.tripnote.entity.TTripNote" >
    update t_trip_note
    set code = #{code,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      `days` = #{days,jdbcType=INTEGER},
      destination = #{destination,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      start_city = #{startCity,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=LONGVARCHAR},
      type = #{type,jdbcType=LONGVARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>