<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.lenovo.tripnote.dao.TTripNoteMapper" >
  <resultMap id="BaseResultMap" type="com.lenovo.tripnote.entity.TTripNote" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="start_date" property="startDate" jdbcType="DATE" />
    <result column="end_date" property="endDate" jdbcType="DATE" />
    <result column="days" property="days" jdbcType="INTEGER" />
    <result column="destination" property="destination" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="start_city" property="startCity" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="introduction" property="introduction" jdbcType="LONGVARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="publish_time" property="publishTime" jdbcType="TIMESTAMP" />
    <result column="imageurl" property="imageurl" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="INTEGER" />
  </resultMap>
  
  
   <resultMap id="DetailResultMap" type="com.lenovo.tripnote.entity.vo.TTripNoteDetailResultVo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="start_date" property="startDate" jdbcType="DATE" />
    <result column="end_date" property="endDate" jdbcType="DATE" />
    <result column="days" property="days" jdbcType="INTEGER" />
    <result column="destination" property="destination" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="start_city" property="startCity" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="introduction" property="introduction" jdbcType="LONGVARCHAR" />
    <result column="imageurl" property="imageurl" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <collection property="custems" javaType="java.util.List" ofType="com.lenovo.tripnote.entity.vo.TCustemVo">  
            <result column="customer_id" property="id" jdbcType="INTEGER" />
            <result column="phone1" property="phone" jdbcType="VARCHAR" />
            <result column="name" property="name" jdbcType="VARCHAR" />  
     </collection>  
     <collection property="tTripNoteSchedules" javaType="java.util.List" ofType="com.lenovo.tripnote.entity.vo.TTripNoteScheduleResultVo">
            <result column="id" property="tripnoteId" jdbcType="INTEGER" />
            <result column="schedule_id" property="id" jdbcType="INTEGER" />
            <result column="schedule_title" property="title" jdbcType="VARCHAR" />  
            <result column="indexdate" property="indexdate" jdbcType="INTEGER" />
            <result column="schedule_introduction" property="introduction" jdbcType="LONGVARCHAR" />
            <collection property="citys" javaType="java.util.List" ofType="com.lenovo.tripnote.entity.vo.TTripnoteScheduleRCityVo">
                   <result column="rcity_id" property="id" jdbcType="INTEGER" />
                   <result column="city_id" property="cityId" jdbcType="INTEGER" />
                   <result column="country_id" property="countryId" jdbcType="INTEGER" />
                   <result column="rcity_schedule_id" property="scheduleId" jdbcType="INTEGER" />
                   <result column="name_cn" property="nameCn" jdbcType="VARCHAR" />    
                   <result column="name_en" property="nameEn" jdbcType="VARCHAR" />
                   <result column="lat" property="lat" jdbcType="DOUBLE" />
                   <result column="lon" property="lon" jdbcType="DOUBLE" />
             </collection> 
     </collection> 
  </resultMap>
  
  <resultMap id="PdfDetailResultMap" type="com.lenovo.tripnote.entity.vo.TTripNoteDetailResultVo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="start_date" property="startDate" jdbcType="DATE" />
    <result column="end_date" property="endDate" jdbcType="DATE" />
    <result column="days" property="days" jdbcType="INTEGER" />
    <result column="destination" property="destination" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="start_city" property="startCity" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="trip_instrodution" property="introduction" jdbcType="LONGVARCHAR" />
    <result column="trip_imageurl" property="imageurl" jdbcType="VARCHAR" />
    <result column="trip_price" property="price" jdbcType="INTEGER" />
    <collection property="custems" javaType="java.util.List" ofType="com.lenovo.tripnote.entity.vo.TCustemVo">  
            <result column="customer_id" property="id" jdbcType="INTEGER" />
            <result column="phone1" property="phone" jdbcType="VARCHAR" />
            <result column="name" property="name" jdbcType="VARCHAR" />  
     </collection>  
     <collection property="tTripNoteSchedules" javaType="java.util.List" ofType="com.lenovo.tripnote.entity.vo.TTripNoteScheduleResultVo">
         <id column="trip_schedule_id" property="id" jdbcType="INTEGER" />
		<result column="tripnote_id" property="tripnoteId" jdbcType="INTEGER" />
		<result column="title" property="title" jdbcType="VARCHAR" />
		<result column="indexdate" property="indexdate" jdbcType="INTEGER" />
		<result column="introduction" property="introduction" jdbcType="LONGVARCHAR" />
		<collection property="traffics" javaType="java.util.List"
			ofType="com.lenovo.tripnote.entity.vo.TTripnoteScheduleTrafficResultVo">
			<result column="traffic_id" property="id" jdbcType="INTEGER" />
			<result column="traffic_schedule_id" property="scheduleId"
				jdbcType="INTEGER" />
		    <result column="start_schedule_type" property="startScheduleType" jdbcType="INTEGER" />
			<result column="start_schedule_trip" property="startScheduleTrip"
				jdbcType="INTEGER" />
			<result column="end_schedule_type" property="endScheduleType" jdbcType="INTEGER" />
			
			<result column="end_schedule_trip" property="endScheduleTrip"
				jdbcType="INTEGER" />
		    <result column="traffic_type" property="trafficType" jdbcType="INTEGER" />
			<result column="distance" property="distance" jdbcType="REAL" />
			<result column="spend_time" property="spendTime" jdbcType="BIGINT" />
			<result column="arrival_time" property="arrivalTime" jdbcType="TIME" />
			<result column="shift" property="shift" jdbcType="VARCHAR" />
			<result column="start_time" property="startTime" jdbcType="TIME" />
			<result column="traffic_guide" property="trafficGuide" jdbcType="LONGVARCHAR" />
		</collection>
		<collection property="scheduletrips" javaType="java.util.List"
			ofType="com.lenovo.tripnote.entity.vo.TTripnoteScheduleTripResultVo">
			<result column="scheduletrip_id" property="id" jdbcType="INTEGER" />
			<result column="scheduletrip_schedule_id" property="scheduleId"
				jdbcType="INTEGER" />
			<result column="poi_id" property="poiId" jdbcType="INTEGER" />
			<result column="trip_name_cn" property="nameCn" jdbcType="VARCHAR" />
			<result column="trip_name_en" property="nameEn" jdbcType="VARCHAR" />
			<result column="address" property="address" jdbcType="VARCHAR" />
			<result column="trip_lon" property="lon" jdbcType="DOUBLE" />
			<result column="trip_lat" property="lat" jdbcType="DOUBLE" />
			<result column="trip_city_id" property="cityId" jdbcType="INTEGER" />
			<result column="trip_cityname" property="cityname" jdbcType="VARCHAR" />
			<result column="trip_type" property="type" jdbcType="INTEGER" />
			<result column="phone" property="phone" jdbcType="VARCHAR" />
			<result column="open_time" property="openTime" jdbcType="VARCHAR" />
			<result column="consum_description" property="consumDescription"
				jdbcType="VARCHAR" />
			<result column="traffic_instructions" property="trafficInstructions"
				jdbcType="VARCHAR" />
			<result column="time_reference" property="timeReference"
				jdbcType="VARCHAR" />
			<result column="price" property="price" jdbcType="DOUBLE" />
			<result column="address_instrations" property="addressInstrations"
				jdbcType="VARCHAR" />
			<result column="supplier" property="supplier" jdbcType="VARCHAR" />
			<result column="imageurl" property="imageurl" jdbcType="VARCHAR" />
			<result column="url" property="url" jdbcType="VARCHAR" />
			<result column="guide" property="guide" jdbcType="LONGVARCHAR" />
			<result column="sort" property="sort" jdbcType="INTEGER" />
			
			<result column="traffictype" property="traffictype" jdbcType="INTEGER" />
			<result column="start_name" property="startName" jdbcType="VARCHAR" />
            <result column="end_name" property="endName" jdbcType="VARCHAR" />
            <result column="traffic_start_time" property="startTime" jdbcType="TIMESTAMP" />
            <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
            <result column="model" property="model" jdbcType="VARCHAR" />
            <result column="start_lon" property="startLon" jdbcType="DOUBLE" />
            <result column="start_lat" property="startLat" jdbcType="DOUBLE" />
            <result column="end_lon" property="endLon" jdbcType="DOUBLE" />
            <result column="end_lat" property="endLat" jdbcType="DOUBLE" />
            <result column="time_consume" property="timeConsume" jdbcType="VARCHAR" />
		</collection>
		<collection property="usertripnotes" javaType="java.util.List"
			ofType="com.lenovo.tripnote.entity.vo.BUserTripnoteResultVo">
			<result column="busertrip_id" property="id" jdbcType="INTEGER" />
			<result column="busertrip_title" property="title" jdbcType="VARCHAR" />
			<result column="cover" property="cover" jdbcType="VARCHAR" />
			<result column="busertrip_context" property="context"
				jdbcType="LONGVARCHAR" />
		</collection>
		<collection property="citys" javaType="java.util.List"
			ofType="com.lenovo.tripnote.entity.vo.TTripnoteScheduleRCityVo">
			<result column="rcity_id" property="id" jdbcType="INTEGER" />
			<result column="city_id" property="cityId" jdbcType="INTEGER" />
			<result column="country_id" property="countryId" jdbcType="INTEGER" />
			<result column="schedule_id" property="scheduleId" jdbcType="INTEGER" />
			<result column="name_cn" property="nameCn" jdbcType="VARCHAR" />
			<result column="name_en" property="nameEn" jdbcType="VARCHAR" />
			<result column="lat" property="lat" jdbcType="DOUBLE" />
			<result column="lon" property="lon" jdbcType="DOUBLE" />
		</collection>
		<collection property="scheduleHotels" javaType="java.util.List"
			ofType="com.lenovo.tripnote.entity.vo.TTripnoteScheduleHotelResultVo">
			<result column="hotel_id" property="id" jdbcType="INTEGER" />
			<result column="hotel_name_cn" property="nameCn" jdbcType="VARCHAR" />
			<result column="hotel_name_en" property="nameEn" jdbcType="VARCHAR" />
			<result column="check_in_time" property="checkInTime" jdbcType="VARCHAR" />
			<result column="check_ou_time" property="checkOuTime" jdbcType="VARCHAR" />
			<result column="check_in_type" property="checkInType" jdbcType="INTEGER" />
			<result column="hotel_type" property="type" jdbcType="INTEGER" />
			<result column="hotel_price" property="price" jdbcType="DOUBLE" />
			<result column="hotel_lat" property="lat" jdbcType="DOUBLE" />
			<result column="hotel_lon" property="lon" jdbcType="DOUBLE" />
			<result column="hotel_introduction" property="introduction" jdbcType="LONGVARCHAR" />
			<result column="hotel_imageurl" property="imageurl" jdbcType="VARCHAR" />
			<result column="source_hotel_id" property="hotelId" jdbcType="INTEGER" />
			<result column="hotel_city_name" property="cityName" jdbcType="VARCHAR" />
		</collection>
		<collection property="rents" javaType="java.util.List"
			ofType="com.lenovo.tripnote.entity.vo.TTripnoteScheduleRentResultVo">
			 <id column="rent_id" property="id" jdbcType="INTEGER" />
             <result column="rent_name_cn" property="nameCn" jdbcType="VARCHAR" />
             <result column="rent_name_en" property="nameEn" jdbcType="VARCHAR" />
             <result column="rent_imageurl" property="imageurl" jdbcType="VARCHAR" />
             <result column="rent_price" property="price" jdbcType="DOUBLE" />
             <result column="rent_supplier" property="supplier" jdbcType="VARCHAR" />
             <result column="rent_model" property="model" jdbcType="VARCHAR" />
             <result column="rent_pedestal" property="pedestal" jdbcType="INTEGER" />
             <result column="rent_doors" property="doors" jdbcType="INTEGER" />
             <result column="rent_suitcases" property="suitcases" jdbcType="INTEGER" />
		</collection>
     </collection> 
  </resultMap>
  
   <resultMap id="TravelResultMap" type="com.lenovo.tripnote.entity.vo.TTripNoteDetailResultVo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="tripnote_price" property="price" jdbcType="DOUBLE" />
    <collection property="custems" javaType="java.util.List" ofType="com.lenovo.tripnote.entity.vo.TCustemVo">  
            <result column="customer_id" property="id" jdbcType="INTEGER" />
            <result column="phone1" property="phone" jdbcType="VARCHAR" />
            <result column="name" property="name" jdbcType="VARCHAR" /> 
            <result column="idcard" property="idcard" jdbcType="VARCHAR" />
     </collection>  
     <collection property="tTripNoteSchedules" javaType="java.util.List" ofType="com.lenovo.tripnote.entity.vo.TTripNoteScheduleResultVo">
            <result column="id" property="tripnoteId" jdbcType="INTEGER" />
            <result column="schedule_id" property="id" jdbcType="INTEGER" />
            <result column="schedule_title" property="title" jdbcType="VARCHAR" />  
            <result column="indexdate" property="indexdate" jdbcType="INTEGER" />
          <collection property="scheduletrips" javaType="java.util.List" ofType="com.lenovo.tripnote.entity.vo.TTripnoteScheduleTripResultVo">
			<result column="scheduletrip_id" property="id" jdbcType="INTEGER" />
			<result column="scheduletrip_schedule_id" property="scheduleId"
				jdbcType="INTEGER" />
		    <result column="poi_supplier" property="supplier" jdbcType="VARCHAR" />
			<result column="poi_id" property="poiId" jdbcType="INTEGER" />
			<result column="trip_name_cn" property="nameCn" jdbcType="VARCHAR" />
			<result column="trip_name_en" property="nameEn" jdbcType="VARCHAR" />
			<result column="trip_type" property="type" jdbcType="INTEGER" />
			<result column="schedule_trip_price" property="price" jdbcType="DOUBLE" />
		</collection>
		<collection property="scheduleHotels" javaType="java.util.List"
			ofType="com.lenovo.tripnote.entity.vo.TTripnoteScheduleHotelResultVo">
			<result column="hotel_id" property="id" jdbcType="INTEGER" />
			<result column="hotel_name_cn" property="nameCn" jdbcType="VARCHAR" />
			<result column="hotel_name_en" property="nameEn" jdbcType="VARCHAR" />
			<result column="check_in_time" property="checkInTime" jdbcType="VARCHAR" />
			<result column="check_ou_time" property="checkOuTime" jdbcType="VARCHAR" />
			<result column="hotel_price" property="price" jdbcType="DOUBLE" />
			<result column="hotel_supplier" property="supplier" jdbcType="VARCHAR" />
			<result column="hotel_type" property="type" jdbcType="INTEGER" />
		</collection>
     </collection> 
  </resultMap>
   <resultMap id="TravelTypeResultMap" type="com.lenovo.tripnote.entity.vo.TTripNoteTravelResultVo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="tripnote_price" property="price" jdbcType="INTEGER" />
    <collection property="custems" javaType="java.util.List" ofType="com.lenovo.tripnote.entity.vo.TCustemVo">  
            <result column="customer_id" property="id" jdbcType="INTEGER" />
            <result column="phone1" property="phone" jdbcType="VARCHAR" />
            <result column="name" property="name" jdbcType="VARCHAR" />  
            <result column="idcard" property="idcard" jdbcType="VARCHAR" />  
     </collection>  
     <collection property="scheduletrips" javaType="java.util.List" ofType="com.lenovo.tripnote.entity.vo.TTripnoteScheduleTripResultVo">
			<result column="scheduletrip_id" property="id" jdbcType="INTEGER" />
			<result column="scheduletrip_schedule_id" property="scheduleId"
				jdbcType="INTEGER" />
		    <result column="poi_supplier" property="supplier" jdbcType="VARCHAR" />
			<result column="poi_id" property="poiId" jdbcType="INTEGER" />
			<result column="trip_name_cn" property="nameCn" jdbcType="VARCHAR" />
			<result column="trip_name_en" property="nameEn" jdbcType="VARCHAR" />
			<result column="trip_type" property="type" jdbcType="INTEGER" />
			<result column="schedule_trip_price" property="price" jdbcType="DOUBLE" />
		</collection>
		<collection property="scheduleHotels" javaType="java.util.List"
			ofType="com.lenovo.tripnote.entity.vo.TTripnoteScheduleHotelResultVo">
			<result column="hotel_id" property="id" jdbcType="INTEGER" />
			<result column="hotel_name_cn" property="nameCn" jdbcType="VARCHAR" />
			<result column="hotel_name_en" property="nameEn" jdbcType="VARCHAR" />
			<result column="check_in_time" property="checkInTime" jdbcType="VARCHAR" />
			<result column="check_ou_time" property="checkOuTime" jdbcType="VARCHAR" />
			<result column="hotel_price" property="price" jdbcType="DOUBLE" />
			<result column="hotel_supplier" property="supplier" jdbcType="VARCHAR" />
			<result column="hotel_type" property="type" jdbcType="INTEGER" />
		</collection>
		<collection property="traffics" javaType="java.util.List"
			ofType="com.lenovo.tripnote.entity.vo.TTripnoteScheduleTrafficResultVo">
			<result column="traffic_id" property="id" jdbcType="INTEGER" />
			<result column="traffic_schedule_id" property="scheduleId"
				jdbcType="INTEGER" />
			<result column="start_schedule_trip" property="startScheduleTrip"
				jdbcType="INTEGER" />
			<result column="end_schedule_trip" property="endScheduleTrip"
				jdbcType="INTEGER" />
		    <result column="traffic_type" property="trafficType" jdbcType="INTEGER" />
			<result column="distance" property="distance" jdbcType="REAL" />
			<result column="spend_time" property="spendTime" jdbcType="BIGINT" />
			<result column="arrival_time" property="arrivalTime" jdbcType="TIME" />
			<result column="shift" property="shift" jdbcType="VARCHAR" />
			<result column="start_time" property="startTime" jdbcType="TIME" />
		</collection>
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, code, title, start_date, end_date, `days`, destination, create_time, create_user_id, 
    `status`, start_city, remarks,introduction,type,publish_time,imageurl,price
  </sql>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
   <select id="queryCount" resultType="java.lang.Integer"  parameterType="com.lenovo.tripnote.entity.vo.TTripNoteSearchVo" >
     select count(1) from t_trip_note t where  type = #{record.type,jdbcType=INTEGER}
     <choose>  
          <when test="record.isAll==false"> and create_user_id = #{record.userId,jdbcType=INTEGER} </when>  
          <when test="record.isAll==true"> and create_user_id in (0,#{record.userId,jdbcType=INTEGER})</when>  
     </choose>
      <if test="record.dateStart != null" >
        and `days` >= #{record.dateStart,jdbcType=INTEGER} 
     </if>
      <if test="record.dateEnd != null" >
        and `days` <![CDATA[ < ]]> #{record.dateEnd,jdbcType=INTEGER} 
     </if>
     <if test="record.title != null" >
        and  title like #{record.title,jdbcType=VARCHAR}
     </if>
     <choose>
         <when test="record.sortField != null">
         order by ${record.sortField}  
         <choose>  
             <when test="record.ascOrDes==1">asc</when>  
             <when test="record.ascOrDes!=1">desc</when>  
          </choose>
          </when>
          <when test="record.sortField == null">
              order by t.create_time desc
          </when>
    </choose>
   </select>
  <select id="queryCondition" resultMap="DetailResultMap" parameterType="com.lenovo.tripnote.entity.vo.TTripNoteSearchVo" >
    select
    t.id,t.code, t.title,t.start_date, t.end_date, t.`days`, t.destination, 
    t.`status`, t.start_city, t.remarks,
    tc.name,tc.phone1,tc.id as customer_id,
    t.introduction,t.imageurl,t.price,
    tts.id as schedule_id, tts.title as schedule_title,tts.indexdate,
    bc.id as city_id,bc.name_cn,bc.name_en,bc.lat,bc.lon,ttsrc.schedule_id as rcity_schedule_id,bc.country_id,ttsrc.id as rcity_id
    from (select 
     <include refid="Base_Column_List" />
     from t_trip_note t where  type = #{record.type,jdbcType=INTEGER}
     <choose>  
          <when test="record.isAll==false"> and create_user_id = #{record.userId,jdbcType=INTEGER} </when>  
          <when test="record.isAll==true"> and create_user_id in (0,#{record.userId,jdbcType=INTEGER})</when>  
     </choose>
     <if test="record.dateStart != null" >
        and `days` >= #{record.dateStart,jdbcType=INTEGER} 
     </if>
      <if test="record.dateEnd != null" >
        and `days` <![CDATA[ < ]]> #{record.dateEnd,jdbcType=INTEGER} 
     </if>
     <if test="record.title != null" >
        and t.title like #{record.title,jdbcType=VARCHAR}
     </if>
     <choose>
         <when test="record.sortField != null">
         order by t.${record.sortField}  
         <choose>  
             <when test="record.ascOrDes==1">asc</when>  
             <when test="record.ascOrDes!=1">desc</when>  
          </choose>
          </when>
          <when test="record.sortField == null">
              order by t.create_time desc
          </when>
    </choose>
    limit #{record.pageNo,jdbcType=INTEGER},#{record.pageSize,jdbcType=INTEGER}) as t 
    left join t_tripnote_r_customer ts on t.id = ts.tripnote_id 
    left join t_customer tc on tc.id = ts.customer_id 
    left join t_tripnote_schedule tts on tts.tripnote_id = t.id 
    left join t_tripnote_schedule_r_city ttsrc on ttsrc.schedule_id = tts.id
    left join b_city bc on ttsrc.city_id = bc.id 
     <choose>
         <when test="record.sortField != null">
         order by t.${record.sortField}
         <choose>  
             <when test="record.ascOrDes==1">asc</when>  
             <when test="record.ascOrDes!=1">desc</when>  
          </choose>
          </when>
          <when test="record.sortField == null">
              order by t.create_time desc
          </when>
    </choose>
    ,tts.indexdate asc,ttsrc.create_time asc,ttsrc.id asc
  </select>
  
   <select id="getDetailByKey" resultMap="DetailResultMap" parameterType="java.lang.Integer" >
    select
    t.id,t.code, t.title,t.start_date, t.end_date, t.`days`, t.destination, 
    t.`status`, t.start_city, t.remarks,tc.name,tc.phone1,t.introduction,
    tts.id as schedule_id, tts.title as schedule_title,tts.indexdate,tts.introduction as schedule_introduction,t.imageurl,t.price,
    bc.id as city_id,bc.name_cn,bc.name_en,bc.lat,bc.lon,ttsrc.schedule_id as rcity_schedule_id,bc.country_id,ttsrc.id as rcity_id
    from t_trip_note t 
    left join t_tripnote_r_customer ts on t.id = ts.tripnote_id 
    left join t_customer tc on tc.id = ts.customer_id 
    left join t_tripnote_schedule tts on tts.tripnote_id = t.id 
    left join t_tripnote_schedule_r_city ttsrc on ttsrc.schedule_id = tts.id
    left join b_city bc on ttsrc.city_id = bc.id
    where t.id = #{id,jdbcType=INTEGER} order by tts.indexdate asc,ttsrc.create_time asc
  </select>
  <!-- pdf -->
   <select id="getPdfDetailByKey" resultMap="PdfDetailResultMap" parameterType="java.lang.Integer" >
        select
        ttn.id,ttn.code, ttn.title,ttn.start_date, ttn.end_date, ttn.`days`, ttn.destination,
        ttn.`status`, ttn.start_city, ttn.remarks,ttn.introduction as trip_instrodution,ttn.imageurl as trip_imageurl,ttn.price as trip_price,
		t.id as trip_schedule_id, t.tripnote_id, t.title, t.indexdate,t.introduction,
		ttst.id as scheduletrip_id,ttst.schedule_id as scheduletrip_schedule_id,
		ttst.poi_id, ttst.schedule_id as scheduletrip_id, ttst.name_cn as
		trip_name_cn, ttst.name_en as trip_name_en, ttst.address, ttst.lon as
		trip_lon, ttst.lat as trip_lat, ttst.city_id as trip_city_id,
		ttst.cityname as trip_cityname,
		ttst.`type` as trip_type,ttst.phone as trip_phone, ttst.open_time,
		ttst.consum_description, ttst.traffic_instructions,
		ttst.time_reference, ttst.price,ttst.address_instrations,
		ttst.supplier, ttst.imageurl,ttst.url,ttst.guide,ttst.sort,
		ttstc.id as traffic_id,ttstc.schedule_id as
		traffic_schedule_id,ttstc.start_schedule_trip,ttstc.end_schedule_trip,ttstc.distance,ttstc.spend_time,ttstc.traffic_type,ttstc.start_schedule_type,ttstc.end_schedule_type,
		ttstc.arrival_time,ttstc.start_time,ttstc.shift,ttstc.traffic_guide,
		ttsh.id as hotel_id,ttsh.name_cn as hotel_name_cn,ttsh.name_en as hotel_name_en,ttsh.check_in_time,ttsh.check_ou_time,ttsh.check_in_type,ttsh.city_name as hotel_city_name,
		ttsh.type as hotel_type,ttsh.price as hotel_price,ttsh.lon as hotel_lon,ttsh.lat as hotel_lat,ttsh.imageurl as hotel_imageurl,ttsh.introduction as hotel_introduction,ttsh.hotel_id as source_hotel_id,
		but.id as busertrip_id,but.title as
		busertrip_title,but.cover,but.context as busertrip_context,
		bc.id as city_id,bc.name_cn,bc.name_en,bc.lat,bc.lon,ttsrc.schedule_id as
		schedule_id,bc.country_id,ttsrc.id as rcity_id,
		bt.type as traffictype,bt.start_name,bt.end_name,bt.start_time as traffic_start_time,bt.end_time,
		bt.model,bt.start_lon,bt.start_lat,bt.end_lon,bt.end_lat,bt.time_consume,
		br.id as rent_id,br.name_en as rent_name_en,br.name_cn as rent_name_cn,br.imageurl as rent_imageurl,br.price as rent_price,br.supplier as rent_supplier,
		br.model as rent_model,br.pedestal as rent_pedestal,br.doors as rent_doors,br.suitcases as rent_suitcases
		from t_trip_note ttn
		left join t_tripnote_schedule t on t.tripnote_id = ttn.id 
		left join t_tripnote_schedule_trip ttst on ttst.schedule_id = t.id
		left join t_tripnote_schedule_r_rent ttsrr on ttsrr.schedule_id = t.id
		left join b_rent br on br.id = ttsrr.rentid
		left join b_traffic bt on bt.id = ttst.poi_id and ttst.type = 7 
		left join t_tripnote_schedule_traffic ttstc on ttstc.schedule_id = t.id
		left join t_tripnote_schedule_r_usenote ttsru on ttsru.tripnote_schedule_id=t.id
		left join t_tripnote_schedule_hotel ttsh on ttsh.schedule_id=t.id
		left join b_user_tripnote but on but.id = ttsru.user_tripnote_id
		left join t_tripnote_schedule_r_city ttsrc on ttsrc.schedule_id = t.id
		left join b_city bc on ttsrc.city_id = bc.id
		where ttn.id = #{id,jdbcType=INTEGER} order by t.indexdate asc,ttst.sort asc, ttsrc.create_time asc,ttsrc.id
		
  </select>
  
  <select id="getTravelQuotationByKey" resultMap="TravelResultMap" parameterType="java.lang.Integer" >
    select
    t.id,t.price as tripnote_price,
    tc.name,tc.phone1,tc.id as customer_id,tc.idcard,
    tts.id as schedule_id, tts.title as schedule_title,tts.indexdate,
    ttst.id as scheduletrip_id,ttst.schedule_id as scheduletrip_schedule_id,ttst.poi_id,ttst.name_cn as trip_name_cn,
    ttsh.id as hotel_id,ttsh.name_cn as hotel_name_cn,ttsh.name_en as hotel_name_en,ttsh.check_in_time,ttsh.check_ou_time,ttsh.price as hotel_price,ttsh.supplier as hotel_supplier,ttsh.type as hotel_type,
    ttst.name_en as trip_name_en,ttst.type as trip_type,ttst.price as schedule_trip_price,ttst.supplier as poi_supplier
    from t_trip_note t 
    left join t_tripnote_r_customer ts on t.id = ts.tripnote_id 
    left join t_customer tc on tc.id = ts.customer_id 
    left join t_tripnote_schedule tts on tts.tripnote_id = t.id 
    left join t_tripnote_schedule_trip ttst on ttst.schedule_id = tts.id
    left join t_tripnote_schedule_hotel ttsh on ttsh.schedule_id= tts.id
    where t.id = #{id,jdbcType=INTEGER} order by tts.indexdate asc
  </select>
  
   <select id="getTravelQuotationGroupByTypeByKey" resultMap="TravelTypeResultMap" parameterType="java.lang.Integer" >
    select
    t.id,t.price as tripnote_price,
    tc.name,tc.phone1,tc.id as customer_id,tc.idcard,
    ttst.id as scheduletrip_id,ttst.schedule_id as scheduletrip_schedule_id,
	ttst.poi_id, ttst.schedule_id as scheduletrip_id, ttst.name_cn as
	trip_name_cn, ttst.name_en as trip_name_en,
	ttst.`type` as trip_type,ttst.phone as trip_phone,ttst.price as schedule_trip_price,
	ttst.supplier as poi_supplier,
	ttstc.id as traffic_id,ttstc.schedule_id as
	traffic_schedule_id,ttstc.start_schedule_trip,ttstc.end_schedule_trip,ttstc.distance,ttstc.spend_time,ttstc.traffic_type,
	ttstc.arrival_time,ttstc.start_time,ttstc.shift,
    ttsh.id as hotel_id,ttsh.name_cn as hotel_name_cn,ttsh.name_en as hotel_name_en,ttsh.check_in_time,ttsh.check_ou_time,ttsh.price as hotel_price,ttsh.supplier as hotel_supplier,ttsh.type as hotel_type,
    from t_trip_note t 
    left join t_tripnote_r_customer ts on t.id = ts.tripnote_id 
    left join t_customer tc on tc.id = ts.customer_id 
    left join t_tripnote_schedule tts on tts.tripnote_id = t.id
    left join t_tripnote_schedule_trip ttst on ttst.schedule_id = tts.id
    left join t_tripnote_schedule_traffic ttstc on ttstc.schedule_id = tts.id
    left join t_tripnote_schedule_hotel ttsh on ttsh.schedule_id= tts.id
    where t.id = #{id,jdbcType=INTEGER} order by ttst.`type` desc
  </select>
  
  <select id="queryConditionAndPage" resultMap="DetailResultMap" parameterType="com.lenovo.tripnote.entity.vo.TTripNoteSearchVo" >
    select
    t.id,t.code, t.title,t.start_date, t.end_date, t.`days`, t.destination, 
    t.`status`, t.start_city, t.remarks,tc.name,tc.phone1,tc.id as customer_id,t.introduction,t.imageurl,t.price,
    tts.id as schedule_id, tts.title as schedule_title,tts.indexdate,
    bc.id as city_id,bc.name_cn,bc.name_en,bc.lat,bc.lon,ttsrc.schedule_id as rcity_schedule_id,bc.country_id,ttsrc.id as rcity_id
    from (select 
     <include refid="Base_Column_List" />
     from t_trip_note t where  type = #{record.type,jdbcType=INTEGER} and create_user_id = #{record.userId,jdbcType=INTEGER}
     <if test="record.title != null" >
        and t.title like #{record.title,jdbcType=VARCHAR}
     </if>
     <choose>
         <when test="record.sortField != null">
         order by t.${record.sortField}  
         <choose>  
             <when test="record.ascOrDes==1">asc</when>  
             <when test="record.ascOrDes!=1">desc</when>  
          </choose>
          </when>
          <when test="record.sortField == null">
              order by t.create_time desc
          </when>
    </choose>
    limit #{record.pageNo,jdbcType=INTEGER},#{record.pageSize,jdbcType=INTEGER}) as t 
    left join t_tripnote_r_customer ts on t.id = ts.tripnote_id 
    left join t_customer tc on tc.id = ts.customer_id 
    left join t_tripnote_schedule tts on tts.tripnote_id = t.id 
    left join t_tripnote_schedule_r_city ttsrc on ttsrc.schedule_id = tts.id
    left join b_city bc on ttsrc.city_id = bc.id 
     <choose>
         <when test="record.sortField != null">
         order by t.${record.sortField}
         <choose>  
             <when test="record.ascOrDes==1">asc</when>  
             <when test="record.ascOrDes!=1">desc</when>  
          </choose>
          </when>
          <when test="record.sortField == null">
              order by t.create_time desc
          </when>
    </choose>
    ,tts.indexdate asc,ttsrc.create_time asc,ttsrc.id asc
  </select>
  
  <delete id="deleteByExample" parameterType="com.lenovo.tripnote.entity.TTripNoteExample" >
    delete from t_trip_note
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
 
  <delete id="deleteTraffic" parameterType="com.lenovo.tripnote.entity.TTripNote" >
    delete ttst from t_tripnote_schedule_traffic ttst left join  t_tripnote_schedule  tts on tts.id = ttst.schedule_id where tts.tripnote_id=#{record.id,jdbcType=INTEGER} and tts.create_userid = #{record.createUserId,jdbcType=INTEGER}
  </delete>
   <delete id="deleteScheduleRUsenote" parameterType="com.lenovo.tripnote.entity.TTripNote" >
    delete ttst from t_tripnote_schedule_r_usenote ttst left join t_tripnote_schedule  tts on tts.id = ttst.tripnote_schedule_id where tts.tripnote_id=#{record.id,jdbcType=INTEGER} and tts.create_userid = #{record.createUserId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteScheduleTrip" parameterType="com.lenovo.tripnote.entity.TTripNote" >
    delete ttst from t_tripnote_schedule_trip ttst left join t_tripnote_schedule  tts on tts.id = ttst.schedule_id where tts.tripnote_id=#{record.id,jdbcType=INTEGER} and tts.create_userid = #{record.createUserId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteScheduleRCity" parameterType="com.lenovo.tripnote.entity.TTripNote" >
    delete ttst from t_tripnote_schedule_r_city ttst left join t_tripnote_schedule  tts on tts.id = ttst.schedule_id where tts.tripnote_id=#{record.id,jdbcType=INTEGER} and tts.create_userid = #{record.createUserId,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteScheduleHotel" parameterType="com.lenovo.tripnote.entity.TTripNote" >
    delete ttst from t_tripnote_schedule_hotel ttst left join t_tripnote_schedule  tts on tts.id = ttst.schedule_id where tts.tripnote_id=#{record.id,jdbcType=INTEGER} and tts.create_userid = #{record.createUserId,jdbcType=INTEGER}
  </delete>
   <delete id="deleteScheduleTraffic" parameterType="com.lenovo.tripnote.entity.TTripNote" >
    delete ttst from t_tripnote_schedule_r_rent ttst left join t_tripnote_schedule  tts on tts.id = ttst.schedule_id where tts.tripnote_id=#{record.id,jdbcType=INTEGER} and tts.create_userid = #{record.createUserId,jdbcType=INTEGER}
  </delete>
  
  <select id="countByExample" parameterType="com.lenovo.tripnote.entity.TTripNoteExample" resultType="java.lang.Integer" >
    select count(*) from t_trip_note
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_trip_note
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null" >
        start_date = #{record.startDate,jdbcType=DATE},
      </if>
      <if test="record.endDate != null" >
        end_date = #{record.endDate,jdbcType=DATE},
      </if>
      <if test="record.days != null" >
        `days` = #{record.days,jdbcType=INTEGER},
      </if>
      <if test="record.destination != null" >
        destination = #{record.destination,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.startCity != null" >
        start_city = #{record.startCity,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
       <if test="record.introduction != null" >
        introduction = #{record.introduction,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.publishTime != null" >
        publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.imageurl != null" >
        imageurl = #{record.imageurl,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_trip_note
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=DATE},
      end_date = #{record.endDate,jdbcType=DATE},
      `days` = #{record.days,jdbcType=INTEGER},
      destination = #{record.destination,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=INTEGER},
      start_city = #{record.startCity,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      introduction = #{record.introduction,jdbcType=LONGVARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      publish_time = #{record.publishTime,jdbcType=TIMESTAMP},
      imageurl = #{record.imageurl,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=INTEGER},
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_trip_note
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_trip_note
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lenovo.tripnote.entity.TTripNote" useGeneratedKeys="true"  keyProperty="id">
    insert into t_trip_note (code, title, start_date, 
      end_date, `days`, destination, 
      create_time, create_user_id, `status`, 
      start_city, remarks, introduction,type,publish_time,imageurl,price)
    values (#{code,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{startDate,jdbcType=DATE}, 
      #{endDate,jdbcType=DATE}, #{days,jdbcType=INTEGER}, #{destination,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{startCity,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR},#{introduction,jdbcType=LONGVARCHAR},#{type,jdbcType=INTEGER},#{publishTime,jdbcType=TIMESTAMP},#{imageurl,jdbcType=VARCHAR},#{price,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lenovo.tripnote.entity.TTripNote" useGeneratedKeys="true" keyProperty="id">
    insert into t_trip_note
    <trim prefix="(" suffix=")" suffixOverrides="," >
      code,
      title,
      start_date,
      end_date,
      `days`,
      destination,
      create_time,
      create_user_id,
      `status`,
      start_city,
      remarks,
      introduction,
      type,
      publish_time,
      imageurl,
      price,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{code,jdbcType=VARCHAR},
      #{title,jdbcType=VARCHAR},
      #{startDate,jdbcType=DATE},
      #{endDate,jdbcType=DATE},
      #{days,jdbcType=INTEGER},
      #{destination,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP},
      #{createUserId,jdbcType=INTEGER},
      #{status,jdbcType=INTEGER},
      #{startCity,jdbcType=VARCHAR},
      #{remarks,jdbcType=VARCHAR},
      #{introduction,jdbcType=LONGVARCHAR},
      #{type,jdbcType=INTEGER},
      #{publishTime,jdbcType=TIMESTAMP},
      #{imageurl,jdbcType=VARCHAR},
      #{price,jdbcType=INTEGER},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lenovo.tripnote.entity.TTripNote" >
    update t_trip_note
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="days != null" >
        `days` = #{days,jdbcType=INTEGER},
      </if>
      <if test="destination != null" >
        destination = #{destination,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="startCity != null" >
        start_city = #{startCity,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
       <if test="introduction != null" >
        introduction = #{introduction,jdbcType=LONGVARCHAR},
      </if>
       <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="publishTime != null" >
         publish_time = #{publishTime,jdbcType=TIMESTAMP},
      </if>
        <if test="imageurl != null" >
         imageurl = #{imageurl,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
         price = #{price,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lenovo.tripnote.entity.TTripNote" >
    update t_trip_note
    set code = #{code,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      `days` = #{days,jdbcType=INTEGER},
      destination = #{destination,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      start_city = #{startCity,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=LONGVARCHAR},
      type = #{type,jdbcType=LONGVARCHAR},
      publish_time = #{publishTime,jdbcType=TIMESTAMP},
      imageurl = #{imageurl,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>