<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.lenovo.tripnote.dao.BLoginMapper" >
  <resultMap id="BaseResultMap" type="com.lenovo.tripnote.entity.BLogin" >
    <id column="loginid" property="loginid" jdbcType="BIGINT" />
    <result column="loginIp" property="loginip" jdbcType="VARCHAR" />
    <result column="device" property="device" jdbcType="VARCHAR" />
    <result column="userId" property="userid" jdbcType="BIGINT" />
    <result column="loginName" property="loginname" jdbcType="VARCHAR" />
    <result column="loginTime" property="logintime" jdbcType="TIMESTAMP" />
    <result column="loginOutTime" property="loginouttime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    loginid, loginIp, device, userId, loginName, loginTime, loginOutTime, `status`
  </sql>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lenovo.tripnote.entity.BLoginExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleAndPage" resultMap="BaseResultMap" parameterType="com.lenovo.tripnote.entity.BLoginExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.lenovo.tripnote.entity.BLoginExample" >
    delete from b_login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="com.lenovo.tripnote.entity.BLoginExample" resultType="java.lang.Integer" >
    select count(*) from b_login
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update b_login
    <set >
      <if test="record.loginid != null" >
        loginid = #{record.loginid,jdbcType=BIGINT},
      </if>
      <if test="record.loginip != null" >
        loginIp = #{record.loginip,jdbcType=VARCHAR},
      </if>
      <if test="record.device != null" >
        device = #{record.device,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=BIGINT},
      </if>
      <if test="record.loginname != null" >
        loginName = #{record.loginname,jdbcType=VARCHAR},
      </if>
      <if test="record.logintime != null" >
        loginTime = #{record.logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loginouttime != null" >
        loginOutTime = #{record.loginouttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update b_login
    set loginid = #{record.loginid,jdbcType=BIGINT},
      loginIp = #{record.loginip,jdbcType=VARCHAR},
      device = #{record.device,jdbcType=VARCHAR},
      userId = #{record.userid,jdbcType=BIGINT},
      loginName = #{record.loginname,jdbcType=VARCHAR},
      loginTime = #{record.logintime,jdbcType=TIMESTAMP},
      loginOutTime = #{record.loginouttime,jdbcType=TIMESTAMP},
      `status` = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from b_login
    where loginid = #{loginid,jdbcType=BIGINT}
  </select>
    <select id="getByAccountID" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from b_login where userid = #{userId,jdbcType=BIGINT} and status = 1;
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from b_login
    where loginid = #{loginid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lenovo.tripnote.entity.BLogin" useGeneratedKeys="true" keyProperty="loginid" >
    insert into b_login (loginIp, device, userId, 
      loginName, loginTime, loginOutTime, 
      `status`)
    values (#{loginip,jdbcType=VARCHAR}, #{device,jdbcType=VARCHAR}, #{userid,jdbcType=BIGINT}, 
      #{loginname,jdbcType=VARCHAR}, #{logintime,jdbcType=TIMESTAMP}, #{loginouttime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lenovo.tripnote.entity.BLogin" useGeneratedKeys="true" keyProperty="loginid" >
    insert into b_login
    <trim prefix="(" suffix=")" suffixOverrides="," >
      loginIp,
      device,
      userId,
      loginName,
      loginTime,
      loginOutTime,
      `status`,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{loginip,jdbcType=VARCHAR},
      #{device,jdbcType=VARCHAR},
      #{userid,jdbcType=BIGINT},
      #{loginname,jdbcType=VARCHAR},
      #{logintime,jdbcType=TIMESTAMP},
      #{loginouttime,jdbcType=TIMESTAMP},
      #{status,jdbcType=INTEGER},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lenovo.tripnote.entity.BLogin" >
    update b_login
    <set >
      <if test="loginip != null" >
        loginIp = #{loginip,jdbcType=VARCHAR},
      </if>
      <if test="device != null" >
        device = #{device,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=BIGINT},
      </if>
      <if test="loginname != null" >
        loginName = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="logintime != null" >
        loginTime = #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="loginouttime != null" >
        loginOutTime = #{loginouttime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where loginid = #{loginid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lenovo.tripnote.entity.BLogin" >
    update b_login
    set loginIp = #{loginip,jdbcType=VARCHAR},
      device = #{device,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=BIGINT},
      loginName = #{loginname,jdbcType=VARCHAR},
      loginTime = #{logintime,jdbcType=TIMESTAMP},
      loginOutTime = #{loginouttime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=INTEGER}
    where loginid = #{loginid,jdbcType=BIGINT}
  </update>
</mapper>