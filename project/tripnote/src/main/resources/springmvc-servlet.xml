<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:mvc="http://www.springframework.org/schema/mvc" 
xsi:schemaLocation="http://www.springframework.org/schema/beans  
      http://www.springframework.org/schema/beans/spring-beans-4.3.xsd  
      http://www.springframework.org/schema/context  
      http://www.springframework.org/schema/context/spring-context-4.3.xsd  
      http://www.springframework.org/schema/mvc  
      http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

    <!-- 注解扫描包 ,  (以完成bean创建和自动依赖注入的功能)-->
    <context:component-scan base-package="com.lenovo.tripnote.*" >
        <!-- springMVC配置文件中将Service注解给去掉 -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Repository" />
    </context:component-scan>

    <!-- <context:component-scan /> -->
    <!-- 扫描指定的包中的类上的注解，常用的注解有： -->
    <!-- @Controller 声明Action组件 -->
    <!-- @Service 声明Service组件 @Service("xxxService") -->
    <!-- @Repository 声明Dao组件 -->
    <!-- @Component 泛指组件, 当不好归类时. -->
    <!-- @RequestMapping("/menu") 请求映射 -->
    <!-- @Resource 用于注入，( j2ee提供的 ) 默认按名称装配，@Resource(name="beanName") -->
    <!-- @Autowired 用于注入，(spring提供的) 默认按类型装配 -->
    <!-- @Transactional( rollbackFor={Exception.class}) 事务管理 -->
    <!-- @ResponseBody将内容或对象作为 HTTP 响应正文返回，并调用适合HttpMessageConverter的Adapter转换对象，写入输出流 -->
    <!-- @Scope("prototype") 设定bean的作用域 -->


    <!-- 启用spring mvc 注解 -->
    <!-- <context:annotation-config /> -->

    <!-- 开启注解方案1 -->
    <!-- 注解方法处理 -->
    <!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" /> -->
    <!-- 注解类映射处理 -->
    <!-- <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" /> -->

    <!-- 开启注解方案2 -->
    <mvc:annotation-driven conversion-service="conversionService"/>

    <!-- 增加日期转换规则-->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <ref bean="dateConvert"/>
            </set>
        </property>
    </bean>
    <!-- 第一步:  创建自定义日期转换规则 -->   
    <bean id="dateConvert" class="com.lenovo.tripnote.converter.DateConvert"/>

    <!-- 静态资源访问，方案1 -->
    <!--<mvc:resources mapping="/static/**" location="/static/" /> 
        <mvc:resources mapping="/images/**" location="/WEB-INF/images/" />
        <mvc:resources mapping="/css/**" location="/WEB-INF/css/" />
        <mvc:resources mapping="/js/**" location="/WEB-INF/js/" />-->

    <!-- 静态资源访问，方案2 (表示不对静态资源如CSS、JS、HTML等进行拦截) -->
    <mvc:default-servlet-handler />
    <bean id="mappingJacksonHttpMessageConverter"
        class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean> 

    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <!-- json转换器 -->
                <ref bean="mappingJacksonHttpMessageConverter" />
            </list>
        </property>
    </bean>
    <bean id="exceptionHandler" class="com.lenovo.tripnote.interceptor.TripNoteExcetionHanlder"/>
    <!-- 文件上传配置 -->
    <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding">
            <value>UTF-8</value>
        </property>
        <property name="maxUploadSize">
            <value>104857600</value> 
        </property>
        <property name="maxInMemorySize">
            <value>4096</value>
        </property>
    </bean>
</beans>  